/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.user;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.xml.bind.annotation.*;
import java.io.Serializable;
import java.util.Objects;

/**
 * Specific user&#39;s identifier.
 */
@ApiModel(description = "Specific user's identifier.")
@JsonPropertyOrder({
  UserIdentifier.JSON_PROPERTY_SEGMENT_TYPE,
  UserIdentifier.JSON_PROPERTY_ID_TYPE,
  UserIdentifier.JSON_PROPERTY_VALUE,
  UserIdentifier.JSON_PROPERTY_NOTE,
  UserIdentifier.JSON_PROPERTY_STATUS
})

@XmlRootElement(name = "user_identifier")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "user_identifier")
public class UserIdentifier implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SEGMENT_TYPE = "segment_type";
  @XmlAttribute(name = "segment_type")
  private String segmentType;

  public static final String JSON_PROPERTY_ID_TYPE = "id_type";
  @XmlElement(name = "id_type")
  private UserIdentifierIdType idType;

  public static final String JSON_PROPERTY_VALUE = "value";
  @XmlElement(name = "value")
  private String value;

  public static final String JSON_PROPERTY_NOTE = "note";
  @XmlElement(name = "note")
  private String note;

  public static final String JSON_PROPERTY_STATUS = "status";
  @XmlElement(name = "status")
  private String status;


  public UserIdentifier segmentType(String segmentType) {
    
    this.segmentType = segmentType;
    return this;
  }

   /**
   * The type of the segment (Internal or External). Relevant only for User API (and not for SIS). For internal users, all the segments are considered internal. External users might have internal or external segments. Empty or illegal segment_type for external user will be considered as external.
   * @return segmentType
  **/
  @ApiModelProperty(example = "Internal", value = "The type of the segment (Internal or External). Relevant only for User API (and not for SIS). For internal users, all the segments are considered internal. External users might have internal or external segments. Empty or illegal segment_type for external user will be considered as external.")
  @JsonProperty(JSON_PROPERTY_SEGMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(isAttribute = true, localName = "segment_type")

  public String getSegmentType() {
    return segmentType;
  }


  public void setSegmentType(String segmentType) {
    this.segmentType = segmentType;
  }


  public UserIdentifier idType(UserIdentifierIdType idType) {
    
    this.idType = idType;
    return this;
  }

   /**
   * Get idType
   * @return idType
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "id_type")

  public UserIdentifierIdType getIdType() {
    return idType;
  }


  public void setIdType(UserIdentifierIdType idType) {
    this.idType = idType;
  }


  public UserIdentifier value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * The identifier value. Mandatory. For more information regarding case sensitivity see [here](https://developers.exlibrisgroup.com/blog/case-insensitive-identifiers-and-emails-in-alma/#identifiers_anchor).
   * @return value
  **/
  @ApiModelProperty(example = "johns691", required = true, value = "The identifier value. Mandatory. For more information regarding case sensitivity see [here](https://developers.exlibrisgroup.com/blog/case-insensitive-identifiers-and-emails-in-alma/#identifiers_anchor).")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "value")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  public UserIdentifier note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * identifier&#39;s note.
   * @return note
  **/
  @ApiModelProperty(value = "identifier's note.")
  @JsonProperty(JSON_PROPERTY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "note")

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  public UserIdentifier status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * identifier&#39;s status.
   * @return status
  **/
  @ApiModelProperty(value = "identifier's status.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "status")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserIdentifier userIdentifier = (UserIdentifier) o;
    return Objects.equals(this.segmentType, userIdentifier.segmentType) &&
        Objects.equals(this.idType, userIdentifier.idType) &&
        Objects.equals(this.value, userIdentifier.value) &&
        Objects.equals(this.note, userIdentifier.note) &&
        Objects.equals(this.status, userIdentifier.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(segmentType, idType, value, note, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserIdentifier2 {\n");
    sb.append("    segmentType: ").append(toIndentedString(segmentType)).append("\n");
    sb.append("    idType: ").append(toIndentedString(idType)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

