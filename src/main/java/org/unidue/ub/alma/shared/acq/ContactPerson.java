/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.acq;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;

/**
 * The contact person at the vendor dealing with this invoice. Output parameter.
 */
@ApiModel(description = "The contact person at the vendor dealing with this invoice. Output parameter.")
@JsonPropertyOrder({
  ContactPerson.JSON_PROPERTY_FIRST_NAME,
  ContactPerson.JSON_PROPERTY_LAST_NAME
})

@XmlRootElement(name = "contact_person")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "contact_person")
public class ContactPerson implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FIRST_NAME = "first_name";
  @XmlElement(name = "first_name")
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "last_name";
  @XmlElement(name = "last_name")
  private String lastName;


  public ContactPerson firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * The contact person&#39;s first name. Output parameter.
   * @return firstName
  **/
  
  @ApiModelProperty(example = "John", value = "The contact person's first name. Output parameter.")
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "first_name")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public ContactPerson lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The contact person&#39;s last name. Output parameter.
   * @return lastName
  **/
  
  @ApiModelProperty(example = "Smith", value = "The contact person's last name. Output parameter.")
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "last_name")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactPerson contactPerson = (ContactPerson) o;
    return Objects.equals(this.firstName, contactPerson.firstName) &&
        Objects.equals(this.lastName, contactPerson.lastName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, lastName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactPerson {\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

