/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.acq;

import java.util.Date;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;

/**
 * License Object.
 */
@ApiModel(description = "License Object.")
@JsonPropertyOrder({
  License.JSON_PROPERTY_LINK,
  License.JSON_PROPERTY_CODE,
  License.JSON_PROPERTY_NAME,
  License.JSON_PROPERTY_TYPE,
  License.JSON_PROPERTY_STATUS,
  License.JSON_PROPERTY_LICENSOR,
  License.JSON_PROPERTY_SIGNED_BY,
  License.JSON_PROPERTY_SIGNED_DATE,
  License.JSON_PROPERTY_SECOND_PARTY_SIGNED_BY,
  License.JSON_PROPERTY_SECOND_PARTY_SIGNED_DATE,
  License.JSON_PROPERTY_START_DATE,
  License.JSON_PROPERTY_END_DATE,
  License.JSON_PROPERTY_LOCATION,
  License.JSON_PROPERTY_REVIEW_STATUS,
  License.JSON_PROPERTY_URI,
  License.JSON_PROPERTY_LICENSING_AGENT,
  License.JSON_PROPERTY_TERM,
  License.JSON_PROPERTY_RESOURCE,
  License.JSON_PROPERTY_NOTES,
  License.JSON_PROPERTY_ADMINISTRATOR,
  License.JSON_PROPERTY_AMENDMENTS
})

@XmlRootElement(name = "license")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "license")
public class License implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_LINK = "link";
  @XmlAttribute(name = "link")
  private String link;

  public static final String JSON_PROPERTY_CODE = "code";
  @XmlElement(name = "code")
  private String code;

  public static final String JSON_PROPERTY_NAME = "name";
  @XmlElement(name = "name")
  private String name;

  public static final String JSON_PROPERTY_TYPE = "type";
  @XmlElement(name = "type")
  private LicenseType type;

  public static final String JSON_PROPERTY_STATUS = "status";
  @XmlElement(name = "status")
  private LicenseStatus status;

  public static final String JSON_PROPERTY_LICENSOR = "licensor";
  @XmlElement(name = "licensor")
  private LicenseLicensor licensor;

  public static final String JSON_PROPERTY_SIGNED_BY = "signed_by";
  @XmlElement(name = "signed_by")
  private String signedBy;

  public static final String JSON_PROPERTY_SIGNED_DATE = "signed_date";
  @XmlElement(name = "signed_date")
  private Date signedDate;

  public static final String JSON_PROPERTY_SECOND_PARTY_SIGNED_BY = "second_party_signed_by";
  @XmlElement(name = "second_party_signed_by")
  private String secondPartySignedBy;

  public static final String JSON_PROPERTY_SECOND_PARTY_SIGNED_DATE = "second_party_signed_date";
  @XmlElement(name = "second_party_signed_date")
  private Date secondPartySignedDate;

  public static final String JSON_PROPERTY_START_DATE = "start_date";
  @XmlElement(name = "start_date")
  private Date startDate;

  public static final String JSON_PROPERTY_END_DATE = "end_date";
  @XmlElement(name = "end_date")
  private Date endDate;

  public static final String JSON_PROPERTY_LOCATION = "location";
  @XmlElement(name = "location")
  private LicenseLocation location;

  public static final String JSON_PROPERTY_REVIEW_STATUS = "review_status";
  @XmlElement(name = "review_status")
  private LicenseReviewStatus reviewStatus;

  public static final String JSON_PROPERTY_URI = "uri";
  @XmlElement(name = "uri")
  private String uri;

  public static final String JSON_PROPERTY_LICENSING_AGENT = "licensing_agent";
  @XmlElement(name = "licensing_agent")
  private LicenseLicensingAgent licensingAgent;

  public static final String JSON_PROPERTY_TERM = "term";
  // Is a container wrapped=true
  // items.name=term items.baseName=term items.xmlName= items.xmlNamespace=
  // items.example= items.type=Term2
  @XmlElement(name = "term")
  @XmlElementWrapper(name = "terms")
  private List<Term> term = null;

  public static final String JSON_PROPERTY_RESOURCE = "resource";
  // Is a container wrapped=true
  // items.name=resource items.baseName=resource items.xmlName= items.xmlNamespace=
  // items.example= items.type=Resource
  @XmlElement(name = "resource")
  @XmlElementWrapper(name = "resources")
  private List<Resource> resource = null;

  public static final String JSON_PROPERTY_NOTES = "notes";
  @XmlElement(name = "notes")
  private Object notes = null;

  public static final String JSON_PROPERTY_ADMINISTRATOR = "administrator";
  // Is a container wrapped=true
  // items.name=administrator items.baseName=administrator items.xmlName= items.xmlNamespace=
  // items.example= items.type=Administrator2
  @XmlElement(name = "administrator")
  @XmlElementWrapper(name = "administrators")
  private List<Administrator> administrator = null;

  public static final String JSON_PROPERTY_AMENDMENTS = "amendments";
  @XmlElement(name = "amendments")
  private LicenseAmendments amendments;


  public License link(String link) {
    
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(isAttribute = true, localName = "link")

  public String getLink() {
    return link;
  }


  public void setLink(String link) {
    this.link = link;
  }


  public License code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * The license unique code. Mandatory.
   * @return code
  **/
  @ApiModelProperty(example = "13020", required = true, value = "The license unique code. Mandatory.")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "code")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public License name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The license name. Mandatory.
   * @return name
  **/
  @ApiModelProperty(example = "Social Work Abstracts License", required = true, value = "The license name. Mandatory.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public License type(LicenseType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "type")

  public LicenseType getType() {
    return type;
  }


  public void setType(LicenseType type) {
    this.type = type;
  }


  public License status(LicenseStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "status")

  public LicenseStatus getStatus() {
    return status;
  }


  public void setStatus(LicenseStatus status) {
    this.status = status;
  }


  public License licensor(LicenseLicensor licensor) {
    
    this.licensor = licensor;
    return this;
  }

   /**
   * Get licensor
   * @return licensor
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LICENSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "licensor")

  public LicenseLicensor getLicensor() {
    return licensor;
  }


  public void setLicensor(LicenseLicensor licensor) {
    this.licensor = licensor;
  }


  public License signedBy(String signedBy) {
    
    this.signedBy = signedBy;
    return this;
  }

   /**
   * The primary approver of the license.
   * @return signedBy
  **/
  
  @ApiModelProperty(example = "John Smith", value = "The primary approver of the license.")
  @JsonProperty(JSON_PROPERTY_SIGNED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "signed_by")

  public String getSignedBy() {
    return signedBy;
  }


  public void setSignedBy(String signedBy) {
    this.signedBy = signedBy;
  }


  public License signedDate(Date signedDate) {
    
    this.signedDate = signedDate;
    return this;
  }

   /**
   * The date on which the license was approved by the primary signer.
   * @return signedDate
  **/
  
  @ApiModelProperty(value = "The date on which the license was approved by the primary signer.")
  @JsonProperty(JSON_PROPERTY_SIGNED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "signed_date")

  public Date getSignedDate() {
    return signedDate;
  }


  public void setSignedDate(Date signedDate) {
    this.signedDate = signedDate;
  }


  public License secondPartySignedBy(String secondPartySignedBy) {
    
    this.secondPartySignedBy = secondPartySignedBy;
    return this;
  }

   /**
   * The secondary approver of the license.
   * @return secondPartySignedBy
  **/
  
  @ApiModelProperty(example = "John Smith", value = "The secondary approver of the license.")
  @JsonProperty(JSON_PROPERTY_SECOND_PARTY_SIGNED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "second_party_signed_by")

  public String getSecondPartySignedBy() {
    return secondPartySignedBy;
  }


  public void setSecondPartySignedBy(String secondPartySignedBy) {
    this.secondPartySignedBy = secondPartySignedBy;
  }


  public License secondPartySignedDate(Date secondPartySignedDate) {
    
    this.secondPartySignedDate = secondPartySignedDate;
    return this;
  }

   /**
   * The date when the license was approved by the secondary signer.
   * @return secondPartySignedDate
  **/
  
  @ApiModelProperty(value = "The date when the license was approved by the secondary signer.")
  @JsonProperty(JSON_PROPERTY_SECOND_PARTY_SIGNED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "second_party_signed_date")

  public Date getSecondPartySignedDate() {
    return secondPartySignedDate;
  }


  public void setSecondPartySignedDate(Date secondPartySignedDate) {
    this.secondPartySignedDate = secondPartySignedDate;
  }


  public License startDate(Date startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The license&#39;s start date.
   * @return startDate
  **/
  
  @ApiModelProperty(value = "The license's start date.")
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "start_date")

  public Date getStartDate() {
    return startDate;
  }


  public void setStartDate(Date startDate) {
    this.startDate = startDate;
  }


  public License endDate(Date endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The license&#39;s end date.
   * @return endDate
  **/
  
  @ApiModelProperty(value = "The license's end date.")
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "end_date")

  public Date getEndDate() {
    return endDate;
  }


  public void setEndDate(Date endDate) {
    this.endDate = endDate;
  }


  public License location(LicenseLocation location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "location")

  public LicenseLocation getLocation() {
    return location;
  }


  public void setLocation(LicenseLocation location) {
    this.location = location;
  }


  public License reviewStatus(LicenseReviewStatus reviewStatus) {
    
    this.reviewStatus = reviewStatus;
    return this;
  }

   /**
   * Get reviewStatus
   * @return reviewStatus
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REVIEW_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "review_status")

  public LicenseReviewStatus getReviewStatus() {
    return reviewStatus;
  }


  public void setReviewStatus(LicenseReviewStatus reviewStatus) {
    this.reviewStatus = reviewStatus;
  }


  public License uri(String uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * the URI where the license is stored.
   * @return uri
  **/
  
  @ApiModelProperty(value = "the URI where the license is stored.")
  @JsonProperty(JSON_PROPERTY_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "uri")

  public String getUri() {
    return uri;
  }


  public void setUri(String uri) {
    this.uri = uri;
  }


  public License licensingAgent(LicenseLicensingAgent licensingAgent) {
    
    this.licensingAgent = licensingAgent;
    return this;
  }

   /**
   * Get licensingAgent
   * @return licensingAgent
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LICENSING_AGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "licensing_agent")

  public LicenseLicensingAgent getLicensingAgent() {
    return licensingAgent;
  }


  public void setLicensingAgent(LicenseLicensingAgent licensingAgent) {
    this.licensingAgent = licensingAgent;
  }


  public License term(List<Term> term) {
    
    this.term = term;
    return this;
  }

  public License addTermItem(Term termItem) {
    if (this.term == null) {
      this.term = new ArrayList<Term>();
    }
    this.term.add(termItem);
    return this;
  }

   /**
   * List of the license&#39;s related terms. In the PUT action the incoming list will replace the existing list. If the incoming list is empty, the existing list will be deleted.
   * @return term
  **/
  
  @ApiModelProperty(value = "List of the license's related terms. In the PUT action the incoming list will replace the existing list. If the incoming list is empty, the existing list will be deleted.")
  @JsonProperty(JSON_PROPERTY_TERM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "term")

  public List<Term> getTerm() {
    return term;
  }


  public void setTerm(List<Term> term) {
    this.term = term;
  }


  public License resource(List<Resource> resource) {
    
    this.resource = resource;
    return this;
  }

  public License addResourceItem(Resource resourceItem) {
    if (this.resource == null) {
      this.resource = new ArrayList<Resource>();
    }
    this.resource.add(resourceItem);
    return this;
  }

   /**
   * List of the license&#39;s related electronic resources. Output parameter.
   * @return resource
  **/
  
  @ApiModelProperty(value = "List of the license's related electronic resources. Output parameter.")
  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "resource")

  public List<Resource> getResource() {
    return resource;
  }


  public void setResource(List<Resource> resource) {
    this.resource = resource;
  }


  public License notes(Object notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "notes")

  public Object getNotes() {
    return notes;
  }


  public void setNotes(Object notes) {
    this.notes = notes;
  }


  public License administrator(List<Administrator> administrator) {
    
    this.administrator = administrator;
    return this;
  }

  public License addAdministratorItem(Administrator administratorItem) {
    if (this.administrator == null) {
      this.administrator = new ArrayList<Administrator>();
    }
    this.administrator.add(administratorItem);
    return this;
  }

   /**
   * List of administrators. Relevant for licenses, not relevant for amendments. In the PUT action the incoming list will replace the existing list. If the incoming list is empty, the existing list will be deleted.
   * @return administrator
  **/
  
  @ApiModelProperty(value = "List of administrators. Relevant for licenses, not relevant for amendments. In the PUT action the incoming list will replace the existing list. If the incoming list is empty, the existing list will be deleted.")
  @JsonProperty(JSON_PROPERTY_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "administrator")

  public List<Administrator> getAdministrator() {
    return administrator;
  }


  public void setAdministrator(List<Administrator> administrator) {
    this.administrator = administrator;
  }


  public License amendments(LicenseAmendments amendments) {
    
    this.amendments = amendments;
    return this;
  }

   /**
   * Get amendments
   * @return amendments
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AMENDMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "amendments")

  public LicenseAmendments getAmendments() {
    return amendments;
  }


  public void setAmendments(LicenseAmendments amendments) {
    this.amendments = amendments;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    License license = (License) o;
    return Objects.equals(this.link, license.link) &&
        Objects.equals(this.code, license.code) &&
        Objects.equals(this.name, license.name) &&
        Objects.equals(this.type, license.type) &&
        Objects.equals(this.status, license.status) &&
        Objects.equals(this.licensor, license.licensor) &&
        Objects.equals(this.signedBy, license.signedBy) &&
        Objects.equals(this.signedDate, license.signedDate) &&
        Objects.equals(this.secondPartySignedBy, license.secondPartySignedBy) &&
        Objects.equals(this.secondPartySignedDate, license.secondPartySignedDate) &&
        Objects.equals(this.startDate, license.startDate) &&
        Objects.equals(this.endDate, license.endDate) &&
        Objects.equals(this.location, license.location) &&
        Objects.equals(this.reviewStatus, license.reviewStatus) &&
        Objects.equals(this.uri, license.uri) &&
        Objects.equals(this.licensingAgent, license.licensingAgent) &&
        Objects.equals(this.term, license.term) &&
        Objects.equals(this.resource, license.resource) &&
        Objects.equals(this.notes, license.notes) &&
        Objects.equals(this.administrator, license.administrator) &&
        Objects.equals(this.amendments, license.amendments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(link, code, name, type, status, licensor, signedBy, signedDate, secondPartySignedBy, secondPartySignedDate, startDate, endDate, location, reviewStatus, uri, licensingAgent, term, resource, notes, administrator, amendments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class License2 {\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    licensor: ").append(toIndentedString(licensor)).append("\n");
    sb.append("    signedBy: ").append(toIndentedString(signedBy)).append("\n");
    sb.append("    signedDate: ").append(toIndentedString(signedDate)).append("\n");
    sb.append("    secondPartySignedBy: ").append(toIndentedString(secondPartySignedBy)).append("\n");
    sb.append("    secondPartySignedDate: ").append(toIndentedString(secondPartySignedDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    reviewStatus: ").append(toIndentedString(reviewStatus)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    licensingAgent: ").append(toIndentedString(licensingAgent)).append("\n");
    sb.append("    term: ").append(toIndentedString(term)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    administrator: ").append(toIndentedString(administrator)).append("\n");
    sb.append("    amendments: ").append(toIndentedString(amendments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

