/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.acq;

import java.util.Date;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;

/**
 * Payment information.
 */
@ApiModel(description = "Payment information.")
@JsonPropertyOrder({
  Payment.JSON_PROPERTY_PREPAID,
  Payment.JSON_PROPERTY_INTERNAL_COPY,
  Payment.JSON_PROPERTY_EXPORT_TO_ERP,
  Payment.JSON_PROPERTY_PAYMENT_STATUS,
  Payment.JSON_PROPERTY_VOUCHER_DATE,
  Payment.JSON_PROPERTY_VOUCHER_NUMBER,
  Payment.JSON_PROPERTY_VOUCHER_AMOUNT,
  Payment.JSON_PROPERTY_VOUCHER_CURRENCY
})

@XmlRootElement(name = "payment")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "payment")
public class Payment implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PREPAID = "prepaid";
  @XmlElement(name = "prepaid")
  private Boolean prepaid;

  public static final String JSON_PROPERTY_INTERNAL_COPY = "internal_copy";
  @XmlElement(name = "internal_copy")
  private Boolean internalCopy;

  public static final String JSON_PROPERTY_EXPORT_TO_ERP = "export_to_erp";
  @XmlElement(name = "export_to_erp")
  private Boolean exportToErp;

  public static final String JSON_PROPERTY_PAYMENT_STATUS = "payment_status";
  @XmlElement(name = "payment_status")
  private PaymentPaymentStatus paymentStatus;

  public static final String JSON_PROPERTY_VOUCHER_DATE = "voucher_date";
  @XmlElement(name = "voucher_date")
  private Date voucherDate;

  public static final String JSON_PROPERTY_VOUCHER_NUMBER = "voucher_number";
  @XmlElement(name = "voucher_number")
  private String voucherNumber;

  public static final String JSON_PROPERTY_VOUCHER_AMOUNT = "voucher_amount";
  @XmlElement(name = "voucher_amount")
  private String voucherAmount;

  public static final String JSON_PROPERTY_VOUCHER_CURRENCY = "voucher_currency";
  @XmlElement(name = "voucher_currency")
  private PaymentVoucherCurrency voucherCurrency;


  public Payment prepaid(Boolean prepaid) {
    
    this.prepaid = prepaid;
    return this;
  }

   /**
   * Indication if the invoice is already paid. True is valid only when the payment method is not Accounting department, and the invoice is not an internal copy. Optional. Default is False.
   * @return prepaid
  **/
  
  @ApiModelProperty(example = "false", value = "Indication if the invoice is already paid. True is valid only when the payment method is not Accounting department, and the invoice is not an internal copy. Optional. Default is False.")
  @JsonProperty(JSON_PROPERTY_PREPAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "prepaid")

  public Boolean getPrepaid() {
    return prepaid;
  }


  public void setPrepaid(Boolean prepaid) {
    this.prepaid = prepaid;
  }


  public Payment internalCopy(Boolean internalCopy) {
    
    this.internalCopy = internalCopy;
    return this;
  }

   /**
   * Indication if the invoice is to be loaded into Alma for documentation or tracking purposes. Such invoice is not sent to the ERP and is not prepaid. Optional. Default is False.
   * @return internalCopy
  **/
  
  @ApiModelProperty(example = "false", value = "Indication if the invoice is to be loaded into Alma for documentation or tracking purposes. Such invoice is not sent to the ERP and is not prepaid. Optional. Default is False.")
  @JsonProperty(JSON_PROPERTY_INTERNAL_COPY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "internal_copy")

  public Boolean getInternalCopy() {
    return internalCopy;
  }


  public void setInternalCopy(Boolean internalCopy) {
    this.internalCopy = internalCopy;
  }


  public Payment exportToErp(Boolean exportToErp) {
    
    this.exportToErp = exportToErp;
    return this;
  }

   /**
   * Indication if the invoice should be sent to the (ERP) for notification purposes. Internal copy invoices cannot be sent to ERP. Optional. Default is False.
   * @return exportToErp
  **/
  
  @ApiModelProperty(example = "false", value = "Indication if the invoice should be sent to the (ERP) for notification purposes. Internal copy invoices cannot be sent to ERP. Optional. Default is False.")
  @JsonProperty(JSON_PROPERTY_EXPORT_TO_ERP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "export_to_erp")

  public Boolean getExportToErp() {
    return exportToErp;
  }


  public void setExportToErp(Boolean exportToErp) {
    this.exportToErp = exportToErp;
  }


  public Payment paymentStatus(PaymentPaymentStatus paymentStatus) {
    
    this.paymentStatus = paymentStatus;
    return this;
  }

   /**
   * Get paymentStatus
   * @return paymentStatus
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "payment_status")

  public PaymentPaymentStatus getPaymentStatus() {
    return paymentStatus;
  }


  public void setPaymentStatus(PaymentPaymentStatus paymentStatus) {
    this.paymentStatus = paymentStatus;
  }


  public Payment voucherDate(Date voucherDate) {
    
    this.voucherDate = voucherDate;
    return this;
  }

   /**
   * The date of the payment. Default is current date. This field is relevant in POST /almaws/v1/acq/invoices/invoice ID?op&#x3D;paid.
   * @return voucherDate
  **/
  
  @ApiModelProperty(value = "The date of the payment. Default is current date. This field is relevant in POST /almaws/v1/acq/invoices/invoice ID?op=paid.")
  @JsonProperty(JSON_PROPERTY_VOUCHER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "voucher_date")

  public Date getVoucherDate() {
    return voucherDate;
  }


  public void setVoucherDate(Date voucherDate) {
    this.voucherDate = voucherDate;
  }


  public Payment voucherNumber(String voucherNumber) {
    
    this.voucherNumber = voucherNumber;
    return this;
  }

   /**
   * An external reference number from the ERP system, used to indicate that the invoice was paid. If there is no integration with an external system, you can enter an invoice or check number in this field. This field is relevant in POST /almaws/v1/acq/invoices/invoice ID?op&#x3D;paid.
   * @return voucherNumber
  **/
  
  @ApiModelProperty(example = "A-1234", value = "An external reference number from the ERP system, used to indicate that the invoice was paid. If there is no integration with an external system, you can enter an invoice or check number in this field. This field is relevant in POST /almaws/v1/acq/invoices/invoice ID?op=paid.")
  @JsonProperty(JSON_PROPERTY_VOUCHER_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "voucher_number")

  public String getVoucherNumber() {
    return voucherNumber;
  }


  public void setVoucherNumber(String voucherNumber) {
    this.voucherNumber = voucherNumber;
  }


  public Payment voucherAmount(String voucherAmount) {
    
    this.voucherAmount = voucherAmount;
    return this;
  }

   /**
   * The final amount that was paid (after exchange rates and so forth are taken into account). This field is relevant in POST /almaws/v1/acq/invoices/invoice ID?op&#x3D;paid.
   * @return voucherAmount
  **/
  
  @ApiModelProperty(example = "120", value = "The final amount that was paid (after exchange rates and so forth are taken into account). This field is relevant in POST /almaws/v1/acq/invoices/invoice ID?op=paid.")
  @JsonProperty(JSON_PROPERTY_VOUCHER_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "voucher_amount")

  public String getVoucherAmount() {
    return voucherAmount;
  }


  public void setVoucherAmount(String voucherAmount) {
    this.voucherAmount = voucherAmount;
  }


  public Payment voucherCurrency(PaymentVoucherCurrency voucherCurrency) {
    
    this.voucherCurrency = voucherCurrency;
    return this;
  }

   /**
   * Get voucherCurrency
   * @return voucherCurrency
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VOUCHER_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "voucher_currency")

  public PaymentVoucherCurrency getVoucherCurrency() {
    return voucherCurrency;
  }


  public void setVoucherCurrency(PaymentVoucherCurrency voucherCurrency) {
    this.voucherCurrency = voucherCurrency;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Payment payment = (Payment) o;
    return Objects.equals(this.prepaid, payment.prepaid) &&
        Objects.equals(this.internalCopy, payment.internalCopy) &&
        Objects.equals(this.exportToErp, payment.exportToErp) &&
        Objects.equals(this.paymentStatus, payment.paymentStatus) &&
        Objects.equals(this.voucherDate, payment.voucherDate) &&
        Objects.equals(this.voucherNumber, payment.voucherNumber) &&
        Objects.equals(this.voucherAmount, payment.voucherAmount) &&
        Objects.equals(this.voucherCurrency, payment.voucherCurrency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prepaid, internalCopy, exportToErp, paymentStatus, voucherDate, voucherNumber, voucherAmount, voucherCurrency);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Payment2 {\n");
    sb.append("    prepaid: ").append(toIndentedString(prepaid)).append("\n");
    sb.append("    internalCopy: ").append(toIndentedString(internalCopy)).append("\n");
    sb.append("    exportToErp: ").append(toIndentedString(exportToErp)).append("\n");
    sb.append("    paymentStatus: ").append(toIndentedString(paymentStatus)).append("\n");
    sb.append("    voucherDate: ").append(toIndentedString(voucherDate)).append("\n");
    sb.append("    voucherNumber: ").append(toIndentedString(voucherNumber)).append("\n");
    sb.append("    voucherAmount: ").append(toIndentedString(voucherAmount)).append("\n");
    sb.append("    voucherCurrency: ").append(toIndentedString(voucherCurrency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

