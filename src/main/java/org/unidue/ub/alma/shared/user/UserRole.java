/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.user;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.xml.bind.annotation.*;
import java.io.Serializable;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Specific user&#39;s role.
 */
@ApiModel(description = "Specific user's role.")
@JsonPropertyOrder({
  UserRole.JSON_PROPERTY_STATUS,
  UserRole.JSON_PROPERTY_SCOPE,
  UserRole.JSON_PROPERTY_ROLE_TYPE,
  UserRole.JSON_PROPERTY_EXPIRY_DATE,
  UserRole.JSON_PROPERTY_PARAMETER
})

@XmlRootElement(name = "user_role")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "user_role")
public class UserRole implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_STATUS = "status";
  @XmlElement(name = "status")
  private UserRoleStatus status;

  public static final String JSON_PROPERTY_SCOPE = "scope";
  @XmlElement(name = "scope")
  private UserRoleScope scope;

  public static final String JSON_PROPERTY_ROLE_TYPE = "role_type";
  @XmlElement(name = "role_type")
  private UserRoleRoleType roleType;

  public static final String JSON_PROPERTY_EXPIRY_DATE = "expiry_date";
  @XmlElement(name = "expiry_date")
  private LocalDate expiryDate;

  public static final String JSON_PROPERTY_PARAMETER = "parameter";
  // Is a container wrapped=true
  // items.name=parameter items.baseName=parameter items.xmlName= items.xmlNamespace=
  // items.example= items.type=Parameter2
  @XmlElement(name = "parameter")
  @XmlElementWrapper(name = "parameters")
  private List<Parameter> parameter = null;


  public UserRole status(UserRoleStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "status")

  public UserRoleStatus getStatus() {
    return status;
  }


  public void setStatus(UserRoleStatus status) {
    this.status = status;
  }


  public UserRole scope(UserRoleScope scope) {
    
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "scope")

  public UserRoleScope getScope() {
    return scope;
  }


  public void setScope(UserRoleScope scope) {
    this.scope = scope;
  }


  public UserRole roleType(UserRoleRoleType roleType) {
    
    this.roleType = roleType;
    return this;
  }

   /**
   * Get roleType
   * @return roleType
  **/
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ROLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "role_type")

  public UserRoleRoleType getRoleType() {
    return roleType;
  }


  public void setRoleType(UserRoleRoleType roleType) {
    this.roleType = roleType;
  }


  public UserRole expiryDate(LocalDate expiryDate) {
    
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * The date after which the user no longer has the role.
   * @return expiryDate
  **/
  @ApiModelProperty(value = "The date after which the user no longer has the role.")
  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "expiry_date")

  public LocalDate getExpiryDate() {
    return expiryDate;
  }


  public void setExpiryDate(LocalDate expiryDate) {
    this.expiryDate = expiryDate;
  }


  public UserRole parameter(List<Parameter> parameter) {
    
    this.parameter = parameter;
    return this;
  }

  public UserRole addParameterItem(Parameter parameterItem) {
    if (this.parameter == null) {
      this.parameter = new ArrayList<Parameter>();
    }
    this.parameter.add(parameterItem);
    return this;
  }

   /**
   * Role&#39;s related parameters.
   * @return parameter
  **/
  @ApiModelProperty(value = "Role's related parameters.")
  @JsonProperty(JSON_PROPERTY_PARAMETER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "parameter")

  public List<Parameter> getParameter() {
    return parameter;
  }


  public void setParameter(List<Parameter> parameter) {
    this.parameter = parameter;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserRole userRole = (UserRole) o;
    return Objects.equals(this.status, userRole.status) &&
        Objects.equals(this.scope, userRole.scope) &&
        Objects.equals(this.roleType, userRole.roleType) &&
        Objects.equals(this.expiryDate, userRole.expiryDate) &&
        Objects.equals(this.parameter, userRole.parameter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, scope, roleType, expiryDate, parameter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserRole2 {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    roleType: ").append(toIndentedString(roleType)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    parameter: ").append(toIndentedString(parameter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

