/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.acq;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;

/**
 * Specific vendor&#39;s web address.
 */
@ApiModel(description = "Specific vendor's web address.")
@JsonPropertyOrder({
  WebAddress.JSON_PROPERTY_URL,
  WebAddress.JSON_PROPERTY_URL_TYPE,
  WebAddress.JSON_PROPERTY_DESCRIPTION,
  WebAddress.JSON_PROPERTY_NOTE
})

@XmlRootElement(name = "web_address")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "web_address")
public class WebAddress implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_URL = "url";
  @XmlElement(name = "url")
  private String url;

  public static final String JSON_PROPERTY_URL_TYPE = "url_type";
  @XmlElement(name = "url_type")
  private WebAddressUrlType urlType;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @XmlElement(name = "description")
  private String description;

  public static final String JSON_PROPERTY_NOTE = "note";
  @XmlElement(name = "note")
  private String note;


  public WebAddress url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The URL. Mandatory.
   * @return url
  **/

  @ApiModelProperty(value = "The URL. Mandatory.")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "url")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public WebAddress urlType(WebAddressUrlType urlType) {
    
    this.urlType = urlType;
    return this;
  }

   /**
   * Get urlType
   * @return urlType
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_URL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "url_type")

  public WebAddressUrlType getUrlType() {
    return urlType;
  }


  public void setUrlType(WebAddressUrlType urlType) {
    this.urlType = urlType;
  }


  public WebAddress description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The web address description.
   * @return description
  **/

  @ApiModelProperty(value = "The web address description.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public WebAddress note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * The web address related note.
   * @return note
  **/

  @ApiModelProperty(value = "The web address related note.")
  @JsonProperty(JSON_PROPERTY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "note")

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebAddress webAddress = (WebAddress) o;
    return Objects.equals(this.url, webAddress.url) &&
        Objects.equals(this.urlType, webAddress.urlType) &&
        Objects.equals(this.description, webAddress.description) &&
        Objects.equals(this.note, webAddress.note);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, urlType, description, note);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebAddress2 {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    urlType: ").append(toIndentedString(urlType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

