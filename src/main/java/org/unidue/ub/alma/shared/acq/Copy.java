/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.acq;

import java.util.Date;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;

/**
 * Specific copy of item in a specific location.
 */
@ApiModel(description = "Specific copy of item in a specific location.")
@JsonPropertyOrder({
  Copy.JSON_PROPERTY_LINK,
  Copy.JSON_PROPERTY_PID,
  Copy.JSON_PROPERTY_HOLDING_ID,
  Copy.JSON_PROPERTY_BARCODE,
  Copy.JSON_PROPERTY_ITEM_POLICY,
  Copy.JSON_PROPERTY_RECEIVE_DATE,
  Copy.JSON_PROPERTY_EXPECTED_ARRIVAL_DATE,
  Copy.JSON_PROPERTY_ENUMERATION_A,
  Copy.JSON_PROPERTY_ENUMERATION_B,
  Copy.JSON_PROPERTY_ENUMERATION_C,
  Copy.JSON_PROPERTY_CHRONOLOGY_I,
  Copy.JSON_PROPERTY_CHRONOLOGY_J,
  Copy.JSON_PROPERTY_CHRONOLOGY_K,
  Copy.JSON_PROPERTY_DESCRIPTION,
  Copy.JSON_PROPERTY_STORAGE_LOCATION_ID,
  Copy.JSON_PROPERTY_IS_TEMP_LOCATION,
  Copy.JSON_PROPERTY_PERMANENT_LIBRARY,
  Copy.JSON_PROPERTY_PERMANENT_SHELVING_LOCATION
})

@XmlRootElement(name = "copy")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "copy")
public class Copy implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_LINK = "link";
  @XmlAttribute(name = "link")
  private String link;

  public static final String JSON_PROPERTY_PID = "pid";
  @XmlElement(name = "pid")
  private String pid;

  public static final String JSON_PROPERTY_HOLDING_ID = "holding_id";
  @XmlElement(name = "holding_id")
  private String holdingId;

  public static final String JSON_PROPERTY_BARCODE = "barcode";
  @XmlElement(name = "barcode")
  private String barcode;

  public static final String JSON_PROPERTY_ITEM_POLICY = "item_policy";
  @XmlElement(name = "item_policy")
  private CopyItemPolicy itemPolicy;

  public static final String JSON_PROPERTY_RECEIVE_DATE = "receive_date";
  @XmlElement(name = "receive_date")
  private Date receiveDate;

  public static final String JSON_PROPERTY_EXPECTED_ARRIVAL_DATE = "expected_arrival_date";
  @XmlElement(name = "expected_arrival_date")
  private Date expectedArrivalDate;

  public static final String JSON_PROPERTY_ENUMERATION_A = "enumeration_a";
  @XmlElement(name = "enumeration_a")
  private String enumerationA;

  public static final String JSON_PROPERTY_ENUMERATION_B = "enumeration_b";
  @XmlElement(name = "enumeration_b")
  private String enumerationB;

  public static final String JSON_PROPERTY_ENUMERATION_C = "enumeration_c";
  @XmlElement(name = "enumeration_c")
  private String enumerationC;

  public static final String JSON_PROPERTY_CHRONOLOGY_I = "chronology_i";
  @XmlElement(name = "chronology_i")
  private String chronologyI;

  public static final String JSON_PROPERTY_CHRONOLOGY_J = "chronology_j";
  @XmlElement(name = "chronology_j")
  private String chronologyJ;

  public static final String JSON_PROPERTY_CHRONOLOGY_K = "chronology_k";
  @XmlElement(name = "chronology_k")
  private String chronologyK;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @XmlElement(name = "description")
  private String description;

  public static final String JSON_PROPERTY_STORAGE_LOCATION_ID = "storage_location_id";
  @XmlElement(name = "storage_location_id")
  private String storageLocationId;

  public static final String JSON_PROPERTY_IS_TEMP_LOCATION = "is_temp_location";
  @XmlElement(name = "is_temp_location")
  private Boolean isTempLocation;

  public static final String JSON_PROPERTY_PERMANENT_LIBRARY = "permanent_library";
  @XmlElement(name = "permanent_library")
  private CopyPermanentLibrary permanentLibrary;

  public static final String JSON_PROPERTY_PERMANENT_SHELVING_LOCATION = "permanent_shelving_location";
  @XmlElement(name = "permanent_shelving_location")
  private String permanentShelvingLocation;


  public Copy link(String link) {
    
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(isAttribute = true, localName = "link")

  public String getLink() {
    return link;
  }


  public void setLink(String link) {
    this.link = link;
  }


  public Copy pid(String pid) {
    
    this.pid = pid;
    return this;
  }

   /**
   * The item&#39;s pid. Output parameter.
   * @return pid
  **/

  @ApiModelProperty(example = "23344156380001021", value = "The item's pid. Output parameter.")
  @JsonProperty(JSON_PROPERTY_PID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "pid")

  public String getPid() {
    return pid;
  }


  public void setPid(String pid) {
    this.pid = pid;
  }


  public Copy holdingId(String holdingId) {
    
    this.holdingId = holdingId;
    return this;
  }

   /**
   * The item&#39;s related holding record id. Output parameter.
   * @return holdingId
  **/

  @ApiModelProperty(example = "229189440000521", value = "The item's related holding record id. Output parameter.")
  @JsonProperty(JSON_PROPERTY_HOLDING_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "holding_id")

  public String getHoldingId() {
    return holdingId;
  }


  public void setHoldingId(String holdingId) {
    this.holdingId = holdingId;
  }


  public Copy barcode(String barcode) {
    
    this.barcode = barcode;
    return this;
  }

   /**
   * The item&#39;s barcode.
   * @return barcode
  **/

  @ApiModelProperty(example = "2379499752", value = "The item's barcode.")
  @JsonProperty(JSON_PROPERTY_BARCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "barcode")

  public String getBarcode() {
    return barcode;
  }


  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }


  public Copy itemPolicy(CopyItemPolicy itemPolicy) {
    
    this.itemPolicy = itemPolicy;
    return this;
  }

   /**
   * Get itemPolicy
   * @return itemPolicy
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ITEM_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "item_policy")

  public CopyItemPolicy getItemPolicy() {
    return itemPolicy;
  }


  public void setItemPolicy(CopyItemPolicy itemPolicy) {
    this.itemPolicy = itemPolicy;
  }


  public Copy receiveDate(Date receiveDate) {
    
    this.receiveDate = receiveDate;
    return this;
  }

   /**
   * The date in which the item has arrived to the library. If supplied in POST action the item will be created as received.
   * @return receiveDate
  **/

  @ApiModelProperty(value = "The date in which the item has arrived to the library. If supplied in POST action the item will be created as received.")
  @JsonProperty(JSON_PROPERTY_RECEIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "receive_date")

  public Date getReceiveDate() {
    return receiveDate;
  }


  public void setReceiveDate(Date receiveDate) {
    this.receiveDate = receiveDate;
  }


  public Copy expectedArrivalDate(Date expectedArrivalDate) {
    
    this.expectedArrivalDate = expectedArrivalDate;
    return this;
  }

   /**
   * The date in which the item is expected to arrive at the library. Note that this field is deprecated in the POST action: the expected_receipt_date on the po line level should be supplied.
   * @return expectedArrivalDate
  **/

  @ApiModelProperty(value = "The date in which the item is expected to arrive at the library. Note that this field is deprecated in the POST action: the expected_receipt_date on the po line level should be supplied.")
  @JsonProperty(JSON_PROPERTY_EXPECTED_ARRIVAL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "expected_arrival_date")

  public Date getExpectedArrivalDate() {
    return expectedArrivalDate;
  }


  public void setExpectedArrivalDate(Date expectedArrivalDate) {
    this.expectedArrivalDate = expectedArrivalDate;
  }


  public Copy enumerationA(String enumerationA) {
    
    this.enumerationA = enumerationA;
    return this;
  }

   /**
   * enumeration A
   * @return enumerationA
  **/

  @ApiModelProperty(value = "enumeration A")
  @JsonProperty(JSON_PROPERTY_ENUMERATION_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "enumeration_a")

  public String getEnumerationA() {
    return enumerationA;
  }


  public void setEnumerationA(String enumerationA) {
    this.enumerationA = enumerationA;
  }


  public Copy enumerationB(String enumerationB) {
    
    this.enumerationB = enumerationB;
    return this;
  }

   /**
   * enumeration B
   * @return enumerationB
  **/

  @ApiModelProperty(value = "enumeration B")
  @JsonProperty(JSON_PROPERTY_ENUMERATION_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "enumeration_b")

  public String getEnumerationB() {
    return enumerationB;
  }


  public void setEnumerationB(String enumerationB) {
    this.enumerationB = enumerationB;
  }


  public Copy enumerationC(String enumerationC) {
    
    this.enumerationC = enumerationC;
    return this;
  }

   /**
   * enumeration C
   * @return enumerationC
  **/

  @ApiModelProperty(value = "enumeration C")
  @JsonProperty(JSON_PROPERTY_ENUMERATION_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "enumeration_c")

  public String getEnumerationC() {
    return enumerationC;
  }


  public void setEnumerationC(String enumerationC) {
    this.enumerationC = enumerationC;
  }


  public Copy chronologyI(String chronologyI) {
    
    this.chronologyI = chronologyI;
    return this;
  }

   /**
   * chronology I
   * @return chronologyI
  **/

  @ApiModelProperty(value = "chronology I")
  @JsonProperty(JSON_PROPERTY_CHRONOLOGY_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "chronology_i")

  public String getChronologyI() {
    return chronologyI;
  }


  public void setChronologyI(String chronologyI) {
    this.chronologyI = chronologyI;
  }


  public Copy chronologyJ(String chronologyJ) {
    
    this.chronologyJ = chronologyJ;
    return this;
  }

   /**
   * chronology J
   * @return chronologyJ
  **/

  @ApiModelProperty(value = "chronology J")
  @JsonProperty(JSON_PROPERTY_CHRONOLOGY_J)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "chronology_j")

  public String getChronologyJ() {
    return chronologyJ;
  }


  public void setChronologyJ(String chronologyJ) {
    this.chronologyJ = chronologyJ;
  }


  public Copy chronologyK(String chronologyK) {
    
    this.chronologyK = chronologyK;
    return this;
  }

   /**
   * chronology K
   * @return chronologyK
  **/

  @ApiModelProperty(value = "chronology K")
  @JsonProperty(JSON_PROPERTY_CHRONOLOGY_K)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "chronology_k")

  public String getChronologyK() {
    return chronologyK;
  }


  public void setChronologyK(String chronologyK) {
    this.chronologyK = chronologyK;
  }


  public Copy description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * This item&#39;s description.
   * @return description
  **/

  @ApiModelProperty(example = "desc", value = "This item's description.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Copy storageLocationId(String storageLocationId) {
    
    this.storageLocationId = storageLocationId;
    return this;
  }

   /**
   * The ID number of the location where the item is stored.
   * @return storageLocationId
  **/

  @ApiModelProperty(example = "12339700001021", value = "The ID number of the location where the item is stored.")
  @JsonProperty(JSON_PROPERTY_STORAGE_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "storage_location_id")

  public String getStorageLocationId() {
    return storageLocationId;
  }


  public void setStorageLocationId(String storageLocationId) {
    this.storageLocationId = storageLocationId;
  }


  public Copy isTempLocation(Boolean isTempLocation) {
    
    this.isTempLocation = isTempLocation;
    return this;
  }

   /**
   * If this location is the item&#39;s temporary location.
   * @return isTempLocation
  **/

  @ApiModelProperty(example = "false", value = "If this location is the item's temporary location.")
  @JsonProperty(JSON_PROPERTY_IS_TEMP_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "is_temp_location")

  public Boolean getIsTempLocation() {
    return isTempLocation;
  }


  public void setIsTempLocation(Boolean isTempLocation) {
    this.isTempLocation = isTempLocation;
  }


  public Copy permanentLibrary(CopyPermanentLibrary permanentLibrary) {
    
    this.permanentLibrary = permanentLibrary;
    return this;
  }

   /**
   * Get permanentLibrary
   * @return permanentLibrary
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERMANENT_LIBRARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "permanent_library")

  public CopyPermanentLibrary getPermanentLibrary() {
    return permanentLibrary;
  }


  public void setPermanentLibrary(CopyPermanentLibrary permanentLibrary) {
    this.permanentLibrary = permanentLibrary;
  }


  public Copy permanentShelvingLocation(String permanentShelvingLocation) {
    
    this.permanentShelvingLocation = permanentShelvingLocation;
    return this;
  }

   /**
   * Permanent shelving location. Relevant only if is_temp_location is True.
   * @return permanentShelvingLocation
  **/

  @ApiModelProperty(value = "Permanent shelving location. Relevant only if is_temp_location is True.")
  @JsonProperty(JSON_PROPERTY_PERMANENT_SHELVING_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "permanent_shelving_location")

  public String getPermanentShelvingLocation() {
    return permanentShelvingLocation;
  }


  public void setPermanentShelvingLocation(String permanentShelvingLocation) {
    this.permanentShelvingLocation = permanentShelvingLocation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Copy copy = (Copy) o;
    return Objects.equals(this.link, copy.link) &&
        Objects.equals(this.pid, copy.pid) &&
        Objects.equals(this.holdingId, copy.holdingId) &&
        Objects.equals(this.barcode, copy.barcode) &&
        Objects.equals(this.itemPolicy, copy.itemPolicy) &&
        Objects.equals(this.receiveDate, copy.receiveDate) &&
        Objects.equals(this.expectedArrivalDate, copy.expectedArrivalDate) &&
        Objects.equals(this.enumerationA, copy.enumerationA) &&
        Objects.equals(this.enumerationB, copy.enumerationB) &&
        Objects.equals(this.enumerationC, copy.enumerationC) &&
        Objects.equals(this.chronologyI, copy.chronologyI) &&
        Objects.equals(this.chronologyJ, copy.chronologyJ) &&
        Objects.equals(this.chronologyK, copy.chronologyK) &&
        Objects.equals(this.description, copy.description) &&
        Objects.equals(this.storageLocationId, copy.storageLocationId) &&
        Objects.equals(this.isTempLocation, copy.isTempLocation) &&
        Objects.equals(this.permanentLibrary, copy.permanentLibrary) &&
        Objects.equals(this.permanentShelvingLocation, copy.permanentShelvingLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(link, pid, holdingId, barcode, itemPolicy, receiveDate, expectedArrivalDate, enumerationA, enumerationB, enumerationC, chronologyI, chronologyJ, chronologyK, description, storageLocationId, isTempLocation, permanentLibrary, permanentShelvingLocation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Copy2 {\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    holdingId: ").append(toIndentedString(holdingId)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    itemPolicy: ").append(toIndentedString(itemPolicy)).append("\n");
    sb.append("    receiveDate: ").append(toIndentedString(receiveDate)).append("\n");
    sb.append("    expectedArrivalDate: ").append(toIndentedString(expectedArrivalDate)).append("\n");
    sb.append("    enumerationA: ").append(toIndentedString(enumerationA)).append("\n");
    sb.append("    enumerationB: ").append(toIndentedString(enumerationB)).append("\n");
    sb.append("    enumerationC: ").append(toIndentedString(enumerationC)).append("\n");
    sb.append("    chronologyI: ").append(toIndentedString(chronologyI)).append("\n");
    sb.append("    chronologyJ: ").append(toIndentedString(chronologyJ)).append("\n");
    sb.append("    chronologyK: ").append(toIndentedString(chronologyK)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    storageLocationId: ").append(toIndentedString(storageLocationId)).append("\n");
    sb.append("    isTempLocation: ").append(toIndentedString(isTempLocation)).append("\n");
    sb.append("    permanentLibrary: ").append(toIndentedString(permanentLibrary)).append("\n");
    sb.append("    permanentShelvingLocation: ").append(toIndentedString(permanentShelvingLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

