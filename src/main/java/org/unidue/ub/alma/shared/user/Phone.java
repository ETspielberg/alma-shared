/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.user;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.xml.bind.annotation.*;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Specific user&#39;s phone number.
 */
@ApiModel(description = "Specific user's phone number.")
@JsonPropertyOrder({
  Phone.JSON_PROPERTY_PREFERRED,
  Phone.JSON_PROPERTY_PREFERRED_SMS,
  Phone.JSON_PROPERTY_SEGMENT_TYPE,
  Phone.JSON_PROPERTY_PHONE_NUMBER,
  Phone.JSON_PROPERTY_PHONE_TYPE
})

@XmlRootElement(name = "phone")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "phone")
public class Phone implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PREFERRED = "preferred";
  @XmlAttribute(name = "preferred")
  private Boolean preferred;

  public static final String JSON_PROPERTY_PREFERRED_SMS = "preferred_sms";
  @XmlAttribute(name = "preferred_sms")
  private Boolean preferredSms;

  public static final String JSON_PROPERTY_SEGMENT_TYPE = "segment_type";
  @XmlAttribute(name = "segment_type")
  private String segmentType;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phone_number";
  @XmlElement(name = "phone_number")
  private String phoneNumber;

  public static final String JSON_PROPERTY_PHONE_TYPE = "phone_type";
  // Is a container wrapped=true
  // items.name=phoneType items.baseName=phoneType items.xmlName= items.xmlNamespace=
  // items.example= items.type=Phone2PhoneType
  @XmlElement(name = "phoneType")
  @XmlElementWrapper(name = "phone_types")
  private List<PhonePhoneType> phoneType = null;


  public Phone preferred(Boolean preferred) {
    
    this.preferred = preferred;
    return this;
  }

   /**
   * Indication whether the phone number is the preferred one. Only one address can be defined as preferred.
   * @return preferred
  **/
  @ApiModelProperty(example = "false", value = "Indication whether the phone number is the preferred one. Only one address can be defined as preferred.")
  @JsonProperty(JSON_PROPERTY_PREFERRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(isAttribute = true, localName = "preferred")

  public Boolean getPreferred() {
    return preferred;
  }


  public void setPreferred(Boolean preferred) {
    this.preferred = preferred;
  }


  public Phone preferredSms(Boolean preferredSms) {
    
    this.preferredSms = preferredSms;
    return this;
  }

   /**
   * Indication whether the phone number is the preferred one for SMS sending. Only one phone number can be defined as preferred.
   * @return preferredSms
  **/
  @ApiModelProperty(example = "false", value = "Indication whether the phone number is the preferred one for SMS sending. Only one phone number can be defined as preferred.")
  @JsonProperty(JSON_PROPERTY_PREFERRED_SMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(isAttribute = true, localName = "preferred_sms")

  public Boolean getPreferredSms() {
    return preferredSms;
  }


  public void setPreferredSms(Boolean preferredSms) {
    this.preferredSms = preferredSms;
  }


  public Phone segmentType(String segmentType) {
    
    this.segmentType = segmentType;
    return this;
  }

   /**
   * The type of the segment (Internal or External). Relevant only for User API (and not for SIS). For internal users, all the segments are considered internal. External users might have internal or external segments. Empty or illegal segment_type for external user will be considered as external.
   * @return segmentType
  **/
  @ApiModelProperty(example = "Internal", value = "The type of the segment (Internal or External). Relevant only for User API (and not for SIS). For internal users, all the segments are considered internal. External users might have internal or external segments. Empty or illegal segment_type for external user will be considered as external.")
  @JsonProperty(JSON_PROPERTY_SEGMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(isAttribute = true, localName = "segment_type")

  public String getSegmentType() {
    return segmentType;
  }


  public void setSegmentType(String segmentType) {
    this.segmentType = segmentType;
  }


  public Phone phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The phone number. Mandatory.
   * @return phoneNumber
  **/
  @ApiModelProperty(example = "18005882300", value = "The phone number. Mandatory.")
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "phone_number")

  public String getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public Phone phoneType(List<PhonePhoneType> phoneType) {
    
    this.phoneType = phoneType;
    return this;
  }

  public Phone addPhoneTypeItem(PhonePhoneType phoneTypeItem) {
    if (this.phoneType == null) {
      this.phoneType = new ArrayList<PhonePhoneType>();
    }
    this.phoneType.add(phoneTypeItem);
    return this;
  }

   /**
   * The different Phone types. Mandatory.
   * @return phoneType
  **/
  @ApiModelProperty(value = "The different Phone types. Mandatory.")
  @JsonProperty(JSON_PROPERTY_PHONE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "phoneType")

  public List<PhonePhoneType> getPhoneType() {
    return phoneType;
  }


  public void setPhoneType(List<PhonePhoneType> phoneType) {
    this.phoneType = phoneType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Phone phone = (Phone) o;
    return Objects.equals(this.preferred, phone.preferred) &&
        Objects.equals(this.preferredSms, phone.preferredSms) &&
        Objects.equals(this.segmentType, phone.segmentType) &&
        Objects.equals(this.phoneNumber, phone.phoneNumber) &&
        Objects.equals(this.phoneType, phone.phoneType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(preferred, preferredSms, segmentType, phoneNumber, phoneType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Phone2 {\n");
    sb.append("    preferred: ").append(toIndentedString(preferred)).append("\n");
    sb.append("    preferredSms: ").append(toIndentedString(preferredSms)).append("\n");
    sb.append("    segmentType: ").append(toIndentedString(segmentType)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    phoneType: ").append(toIndentedString(phoneType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

