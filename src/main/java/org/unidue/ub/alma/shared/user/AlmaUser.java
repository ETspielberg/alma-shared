/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.user;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import io.swagger.annotations.ApiModelProperty;

import javax.xml.bind.annotation.*;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

/**
 * User Object.
 */
@JsonPropertyOrder({
  AlmaUser.JSON_PROPERTY_LINK,
  AlmaUser.JSON_PROPERTY_RECORD_TYPE,
  AlmaUser.JSON_PROPERTY_PRIMARY_ID,
  AlmaUser.JSON_PROPERTY_FIRST_NAME,
  AlmaUser.JSON_PROPERTY_MIDDLE_NAME,
  AlmaUser.JSON_PROPERTY_LAST_NAME,
  AlmaUser.JSON_PROPERTY_FULL_NAME,
  AlmaUser.JSON_PROPERTY_PIN_NUMBER,
  AlmaUser.JSON_PROPERTY_USER_TITLE,
  AlmaUser.JSON_PROPERTY_JOB_CATEGORY,
  AlmaUser.JSON_PROPERTY_JOB_DESCRIPTION,
  AlmaUser.JSON_PROPERTY_GENDER,
  AlmaUser.JSON_PROPERTY_USER_GROUP,
  AlmaUser.JSON_PROPERTY_CAMPUS_CODE,
  AlmaUser.JSON_PROPERTY_WEB_SITE_URL,
  AlmaUser.JSON_PROPERTY_CATALOGER_LEVEL,
  AlmaUser.JSON_PROPERTY_PREFERRED_LANGUAGE,
  AlmaUser.JSON_PROPERTY_BIRTH_DATE,
  AlmaUser.JSON_PROPERTY_EXPIRY_DATE,
  AlmaUser.JSON_PROPERTY_PURGE_DATE,
  AlmaUser.JSON_PROPERTY_ACCOUNT_TYPE,
  AlmaUser.JSON_PROPERTY_EXTERNAL_ID,
  AlmaUser.JSON_PROPERTY_PASSWORD,
  AlmaUser.JSON_PROPERTY_FORCE_PASSWORD_CHANGE,
  AlmaUser.JSON_PROPERTY_STATUS,
  AlmaUser.JSON_PROPERTY_STATUS_DATE,
  AlmaUser.JSON_PROPERTY_REQUESTS,
  AlmaUser.JSON_PROPERTY_LOANS,
  AlmaUser.JSON_PROPERTY_FEES,
  AlmaUser.JSON_PROPERTY_CONTACT_INFO,
  AlmaUser.JSON_PROPERTY_USER_IDENTIFIER,
  AlmaUser.JSON_PROPERTY_USER_ROLE,
  AlmaUser.JSON_PROPERTY_USER_BLOCK,
  AlmaUser.JSON_PROPERTY_USER_NOTE,
  AlmaUser.JSON_PROPERTY_USER_STATISTIC,
  AlmaUser.JSON_PROPERTY_PROXY_FOR_USER,
  AlmaUser.JSON_PROPERTY_RS_LIBRARY,
  AlmaUser.JSON_PROPERTY_LIBRARY_NOTICE,
  AlmaUser.JSON_PROPERTY_SOURCE_LINK_ID,
  AlmaUser.JSON_PROPERTY_SOURCE_INSTITUTION_CODE,
  AlmaUser.JSON_PROPERTY_LINKING_ID,
  AlmaUser.JSON_PROPERTY_PREF_FIRST_NAME,
  AlmaUser.JSON_PROPERTY_PREF_MIDDLE_NAME,
  AlmaUser.JSON_PROPERTY_PREF_LAST_NAME,
  AlmaUser.JSON_PROPERTY_PREF_NAME_SUFFIX,
  AlmaUser.JSON_PROPERTY_IS_RESEARCHER,
  AlmaUser.JSON_PROPERTY_RESEARCHER
})

@XmlRootElement(name = "user")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "user")
public class AlmaUser implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_LINK = "link";
  @XmlAttribute(name = "link")
  private String link;

  public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
  @XmlElement(name = "record_type")
  private UserRecordType recordType;

  public static final String JSON_PROPERTY_PRIMARY_ID = "primary_id";
  @XmlElement(name = "primary_id")
  private String primaryId;

  public static final String JSON_PROPERTY_FIRST_NAME = "first_name";
  @XmlElement(name = "first_name")
  private String firstName;

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middle_name";
  @XmlElement(name = "middle_name")
  private String middleName;

  public static final String JSON_PROPERTY_LAST_NAME = "last_name";
  @XmlElement(name = "last_name")
  private String lastName;

  public static final String JSON_PROPERTY_FULL_NAME = "full_name";
  @XmlElement(name = "full_name")
  private String fullName;

  public static final String JSON_PROPERTY_PIN_NUMBER = "pin_number";
  @XmlElement(name = "pin_number")
  private String pinNumber;

  public static final String JSON_PROPERTY_USER_TITLE = "user_title";
  @XmlElement(name = "user_title")
  private UserUserTitle userTitle;

  public static final String JSON_PROPERTY_JOB_CATEGORY = "job_category";
  @XmlElement(name = "job_category")
  private UserJobCategory jobCategory;

  public static final String JSON_PROPERTY_JOB_DESCRIPTION = "job_description";
  @XmlElement(name = "job_description")
  private String jobDescription;

  public static final String JSON_PROPERTY_GENDER = "gender";
  @XmlElement(name = "gender")
  private UserGender gender;

  public static final String JSON_PROPERTY_USER_GROUP = "user_group";
  @XmlElement(name = "user_group")
  private UserUserGroup userGroup;

  public static final String JSON_PROPERTY_CAMPUS_CODE = "campus_code";
  @XmlElement(name = "campus_code")
  private UserCampusCode campusCode;

  public static final String JSON_PROPERTY_WEB_SITE_URL = "web_site_url";
  @XmlElement(name = "web_site_url")
  private String webSiteUrl;

  public static final String JSON_PROPERTY_CATALOGER_LEVEL = "cataloger_level";
  @XmlElement(name = "cataloger_level")
  private UserCatalogerLevel catalogerLevel;

  public static final String JSON_PROPERTY_PREFERRED_LANGUAGE = "preferred_language";
  @XmlElement(name = "preferred_language")
  private UserPreferredLanguage preferredLanguage;

  public static final String JSON_PROPERTY_BIRTH_DATE = "birth_date";
  @XmlElement(name = "birth_date")
  private Date birthDate;

  public static final String JSON_PROPERTY_EXPIRY_DATE = "expiry_date";
  @XmlElement(name = "expiry_date")
  private Date expiryDate;

  public static final String JSON_PROPERTY_PURGE_DATE = "purge_date";
  @XmlElement(name = "purge_date")
  private Date purgeDate;

  public static final String JSON_PROPERTY_ACCOUNT_TYPE = "account_type";
  @XmlElement(name = "account_type")
  private UserAccountType accountType;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "external_id";
  @XmlElement(name = "external_id")
  private String externalId;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  @XmlElement(name = "password")
  private String password;

  public static final String JSON_PROPERTY_FORCE_PASSWORD_CHANGE = "force_password_change";
  @XmlElement(name = "force_password_change")
  private String forcePasswordChange;

  public static final String JSON_PROPERTY_STATUS = "status";
  @XmlElement(name = "status")
  private UserStatus status;

  public static final String JSON_PROPERTY_STATUS_DATE = "status_date";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'Z'")
  @XmlElement(name = "status_date")
  private Date statusDate;

  public static final String JSON_PROPERTY_REQUESTS = "requests";
  @XmlElement(name = "requests")
  private UserRequests requests;

  public static final String JSON_PROPERTY_LOANS = "loans";
  @XmlElement(name = "loans")
  private UserLoans loans;

  public static final String JSON_PROPERTY_FEES = "fees";
  @XmlElement(name = "fees")
  private UserFees fees;

  public static final String JSON_PROPERTY_CONTACT_INFO = "contact_info";
  @XmlElement(name = "contact_info")
  private ContactInfo contactInfo;

  public static final String JSON_PROPERTY_USER_IDENTIFIER = "user_identifier";
  // Is a container wrapped=true
  // items.name=userIdentifier items.baseName=userIdentifier items.xmlName= items.xmlNamespace=
  // items.example= items.type=UserIdentifier2
  @XmlElement(name = "userIdentifier")
  @XmlElementWrapper(name = "user_identifiers")
  private List<UserIdentifier> userIdentifier = null;

  public static final String JSON_PROPERTY_USER_ROLE = "user_role";
  // Is a container wrapped=true
  // items.name=userRole items.baseName=userRole items.xmlName= items.xmlNamespace=
  // items.example= items.type=UserRole2
  @XmlElement(name = "userRole")
  @XmlElementWrapper(name = "user_roles")
  private List<UserRole> userRole = null;

  public static final String JSON_PROPERTY_USER_BLOCK = "user_block";
  // Is a container wrapped=true
  // items.name=userBlock items.baseName=userBlock items.xmlName= items.xmlNamespace=
  // items.example= items.type=UserBlock2
  @XmlElement(name = "userBlock")
  @XmlElementWrapper(name = "user_blocks")
  private List<UserBlock> userBlock = null;

  public static final String JSON_PROPERTY_USER_NOTE = "user_note";
  // Is a container wrapped=true
  // items.name=userNote items.baseName=userNote items.xmlName= items.xmlNamespace=
  // items.example= items.type=UserNote2
  @XmlElement(name = "userNote")
  @XmlElementWrapper(name = "user_notes")
  private List<UserNote> userNote = null;

  public static final String JSON_PROPERTY_USER_STATISTIC = "user_statistic";
  // Is a container wrapped=true
  // items.name=userStatistic items.baseName=userStatistic items.xmlName= items.xmlNamespace=
  // items.example= items.type=UserStatistic2
  @XmlElement(name = "userStatistic")
  @XmlElementWrapper(name = "user_statistics")
  private List<UserStatistic> userStatistic = null;

  public static final String JSON_PROPERTY_PROXY_FOR_USER = "proxy_for_user";
  // Is a container wrapped=true
  // items.name=proxyForUser items.baseName=proxyForUser items.xmlName= items.xmlNamespace=
  // items.example= items.type=ProxyForUser
  @XmlElement(name = "proxyForUser")
  @XmlElementWrapper(name = "proxy_for_users")
  private List<ProxyForUser> proxyForUser = null;

  public static final String JSON_PROPERTY_RS_LIBRARY = "rs_library";
  // Is a container wrapped=true
  // items.name=rsLibrary items.baseName=rsLibrary items.xmlName= items.xmlNamespace=
  // items.example= items.type=RsLibrary2
  @XmlElement(name = "rsLibrary")
  @XmlElementWrapper(name = "rs_libraries")
  private List<RsLibrary> rsLibrary = null;

  public static final String JSON_PROPERTY_LIBRARY_NOTICE = "library_notice";
  // Is a container wrapped=true
  // items.name=libraryNotice items.baseName=libraryNotice items.xmlName= items.xmlNamespace=
  // items.example= items.type=LibraryNotice2
  @XmlElement(name = "libraryNotice")
  @XmlElementWrapper(name = "library_notices")
  private List<LibraryNotice> libraryNotice = null;

  public static final String JSON_PROPERTY_SOURCE_LINK_ID = "source_link_id";
  @XmlElement(name = "source_link_id")
  private String sourceLinkId;

  public static final String JSON_PROPERTY_SOURCE_INSTITUTION_CODE = "source_institution_code";
  @XmlElement(name = "source_institution_code")
  private String sourceInstitutionCode;

  public static final String JSON_PROPERTY_LINKING_ID = "linking_id";
  @XmlElement(name = "linking_id")
  private String linkingId;

  public static final String JSON_PROPERTY_PREF_FIRST_NAME = "pref_first_name";
  @XmlElement(name = "pref_first_name")
  private String prefFirstName;

  public static final String JSON_PROPERTY_PREF_MIDDLE_NAME = "pref_middle_name";
  @XmlElement(name = "pref_middle_name")
  private String prefMiddleName;

  public static final String JSON_PROPERTY_PREF_LAST_NAME = "pref_last_name";
  @XmlElement(name = "pref_last_name")
  private String prefLastName;

  public static final String JSON_PROPERTY_PREF_NAME_SUFFIX = "pref_name_suffix";
  @XmlElement(name = "pref_name_suffix")
  private String prefNameSuffix;

  public static final String JSON_PROPERTY_IS_RESEARCHER = "is_researcher";
  @XmlElement(name = "is_researcher")
  private Boolean isResearcher;

  public static final String JSON_PROPERTY_RESEARCHER = "researcher";
  @XmlElement(name = "researcher")
  private Object researcher = null;


  public AlmaUser link(String link) {
    
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(isAttribute = true, localName = "link")

  public String getLink() {
    return link;
  }


  public void setLink(String link) {
    this.link = link;
  }


  public AlmaUser recordType(UserRecordType recordType) {
    
    this.recordType = recordType;
    return this;
  }

   /**
   * Get recordType
   * @return recordType
  **/
  
  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "record_type")

  public UserRecordType getRecordType() {
    return recordType;
  }


  public void setRecordType(UserRecordType recordType) {
    this.recordType = recordType;
  }


  public AlmaUser primaryId(String primaryId) {
    
    this.primaryId = primaryId;
    return this;
  }

   /**
   * The primary identifier of the user. Mandatory In User API. For new users in SIS load , if not supplied, the system will generate a default based on the first and the last name. Note that the primary_id is case insensitive.
   * @return primaryId
  **/
  @ApiModelProperty(example = "johns", value = "The primary identifier of the user. Mandatory In User API. For new users in SIS load , if not supplied, the system will generate a default based on the first and the last name. Note that the primary_id is case insensitive.")
  @JsonProperty(JSON_PROPERTY_PRIMARY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "primary_id")

  public String getPrimaryId() {
    return primaryId;
  }


  public void setPrimaryId(String primaryId) {
    this.primaryId = primaryId;
  }


  public AlmaUser firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * The user&#39;s first name.
   * @return firstName
  **/
  @ApiModelProperty(example = "John", value = "The user's first name.")
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "first_name")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public AlmaUser middleName(String middleName) {
    
    this.middleName = middleName;
    return this;
  }

   /**
   * The user&#39;s middle name.
   * @return middleName
  **/
  
  @ApiModelProperty(example = "W", value = "The user's middle name.")
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "middle_name")

  public String getMiddleName() {
    return middleName;
  }


  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }


  public AlmaUser lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The user&#39;s last name.
   * @return lastName
  **/
  
  @ApiModelProperty(example = "Smith", value = "The user's last name.")
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "last_name")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public AlmaUser fullName(String fullName) {
    
    this.fullName = fullName;
    return this;
  }

   /**
   * The user&#39;s full name. Output parameter.
   * @return fullName
  **/
  
  @ApiModelProperty(example = "John W Smith", value = "The user's full name. Output parameter.")
  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "full_name")

  public String getFullName() {
    return fullName;
  }


  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public AlmaUser pinNumber(String pinNumber) {
    
    this.pinNumber = pinNumber;
    return this;
  }

   /**
   * A four-digit number which serves as a password for the user to log on to the selfcheck machine (SIP2). On SIS synch this field will not be replaced if it was updated manually (or if empty in the incoming user record). For external users in PUT action: this field will not be replaced if it was updated manually (or if empty in the incoming user record), unless &#39;override&#39; parameter is sent with the field&#39;s name. See [blog](https://developers.exlibrisgroup.com/blog/External-user-data-behavior-of-SIS-synchronization-and-API) for more details.
   * @return pinNumber
  **/
  
  @ApiModelProperty(example = "4554", value = "A four-digit number which serves as a password for the user to log on to the selfcheck machine (SIP2). On SIS synch this field will not be replaced if it was updated manually (or if empty in the incoming user record). For external users in PUT action: this field will not be replaced if it was updated manually (or if empty in the incoming user record), unless 'override' parameter is sent with the field's name. See [blog](https://developers.exlibrisgroup.com/blog/External-user-data-behavior-of-SIS-synchronization-and-API) for more details.")
  @JsonProperty(JSON_PROPERTY_PIN_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "pin_number")

  public String getPinNumber() {
    return pinNumber;
  }


  public void setPinNumber(String pinNumber) {
    this.pinNumber = pinNumber;
  }


  public AlmaUser userTitle(UserUserTitle userTitle) {
    
    this.userTitle = userTitle;
    return this;
  }

   /**
   * Get userTitle
   * @return userTitle
  **/
  
  
  @JsonProperty(JSON_PROPERTY_USER_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "user_title")

  public UserUserTitle getUserTitle() {
    return userTitle;
  }


  public void setUserTitle(UserUserTitle userTitle) {
    this.userTitle = userTitle;
  }


  public AlmaUser jobCategory(UserJobCategory jobCategory) {
    
    this.jobCategory = jobCategory;
    return this;
  }

   /**
   * Get jobCategory
   * @return jobCategory
  **/
  
  
  @JsonProperty(JSON_PROPERTY_JOB_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "job_category")

  public UserJobCategory getJobCategory() {
    return jobCategory;
  }


  public void setJobCategory(UserJobCategory jobCategory) {
    this.jobCategory = jobCategory;
  }


  public AlmaUser jobDescription(String jobDescription) {
    
    this.jobDescription = jobDescription;
    return this;
  }

   /**
   * General description of the user&#39;s job.
   * @return jobDescription
  **/
  
  @ApiModelProperty(example = "The best cataloger", value = "General description of the user's job.")
  @JsonProperty(JSON_PROPERTY_JOB_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "job_description")

  public String getJobDescription() {
    return jobDescription;
  }


  public void setJobDescription(String jobDescription) {
    this.jobDescription = jobDescription;
  }


  public AlmaUser gender(UserGender gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  
  
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "gender")

  public UserGender getGender() {
    return gender;
  }


  public void setGender(UserGender gender) {
    this.gender = gender;
  }


  public AlmaUser userGroup(UserUserGroup userGroup) {
    
    this.userGroup = userGroup;
    return this;
  }

   /**
   * Get userGroup
   * @return userGroup
  **/
  
  
  @JsonProperty(JSON_PROPERTY_USER_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "user_group")

  public UserUserGroup getUserGroup() {
    return userGroup;
  }


  public void setUserGroup(UserUserGroup userGroup) {
    this.userGroup = userGroup;
  }


  public AlmaUser campusCode(UserCampusCode campusCode) {
    
    this.campusCode = campusCode;
    return this;
  }

   /**
   * Get campusCode
   * @return campusCode
  **/
  
  
  @JsonProperty(JSON_PROPERTY_CAMPUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "campus_code")

  public UserCampusCode getCampusCode() {
    return campusCode;
  }


  public void setCampusCode(UserCampusCode campusCode) {
    this.campusCode = campusCode;
  }


  public AlmaUser webSiteUrl(String webSiteUrl) {
    
    this.webSiteUrl = webSiteUrl;
    return this;
  }

   /**
   * The web site address related to the user.
   * @return webSiteUrl
  **/
  
  @ApiModelProperty(value = "The web site address related to the user.")
  @JsonProperty(JSON_PROPERTY_WEB_SITE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "web_site_url")

  public String getWebSiteUrl() {
    return webSiteUrl;
  }


  public void setWebSiteUrl(String webSiteUrl) {
    this.webSiteUrl = webSiteUrl;
  }


  public AlmaUser catalogerLevel(UserCatalogerLevel catalogerLevel) {
    
    this.catalogerLevel = catalogerLevel;
    return this;
  }

   /**
   * Get catalogerLevel
   * @return catalogerLevel
  **/
  
  
  @JsonProperty(JSON_PROPERTY_CATALOGER_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "cataloger_level")

  public UserCatalogerLevel getCatalogerLevel() {
    return catalogerLevel;
  }


  public void setCatalogerLevel(UserCatalogerLevel catalogerLevel) {
    this.catalogerLevel = catalogerLevel;
  }


  public AlmaUser preferredLanguage(UserPreferredLanguage preferredLanguage) {
    
    this.preferredLanguage = preferredLanguage;
    return this;
  }

   /**
   * Get preferredLanguage
   * @return preferredLanguage
  **/
  
  
  @JsonProperty(JSON_PROPERTY_PREFERRED_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "preferred_language")

  public UserPreferredLanguage getPreferredLanguage() {
    return preferredLanguage;
  }


  public void setPreferredLanguage(UserPreferredLanguage preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
  }


  public AlmaUser birthDate(Date birthDate) {
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * The user&#39;s birth date.
   * @return birthDate
  **/
  
  @ApiModelProperty(value = "The user's birth date.")
  @JsonProperty(JSON_PROPERTY_BIRTH_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "birth_date")

  public Date getBirthDate() {
    return birthDate;
  }


  public void setBirthDate(Date birthDate) {
    this.birthDate = birthDate;
  }


  public AlmaUser expiryDate(Date expiryDate) {
    
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * The estimated date when the user is expected to leave the institution.
   * @return expiryDate
  **/
  
  @ApiModelProperty(value = "The estimated date when the user is expected to leave the institution.")
  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "expiry_date")

  public Date getExpiryDate() {
    return expiryDate;
  }


  public void setExpiryDate(Date expiryDate) {
    this.expiryDate = expiryDate;
  }


  public AlmaUser purgeDate(Date purgeDate) {
    
    this.purgeDate = purgeDate;
    return this;
  }

   /**
   * The date on which the user is purged from the system.
   * @return purgeDate
  **/
  
  @ApiModelProperty(value = "The date on which the user is purged from the system.")
  @JsonProperty(JSON_PROPERTY_PURGE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "purge_date")

  public Date getPurgeDate() {
    return purgeDate;
  }


  public void setPurgeDate(Date purgeDate) {
    this.purgeDate = purgeDate;
  }


  public AlmaUser accountType(UserAccountType accountType) {
    
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  
  
  @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "account_type")

  public UserAccountType getAccountType() {
    return accountType;
  }


  public void setAccountType(UserAccountType accountType) {
    this.accountType = accountType;
  }


  public AlmaUser externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * The external system from which the user was loaded into Alma. Relevant only for External users. This field is mandatory during the POST and PUT actions for external users, and must match a valid SIS external system profile. On SIS load, it is filled with the SIS profile code.
   * @return externalId
  **/
  
  @ApiModelProperty(value = "The external system from which the user was loaded into Alma. Relevant only for External users. This field is mandatory during the POST and PUT actions for external users, and must match a valid SIS external system profile. On SIS load, it is filled with the SIS profile code.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "external_id")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public AlmaUser password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * user&#39;s password. Relevant for internal users only. Due to security issues, it is returned empty in the GET action. Note that in the PUT action password can be updated, but if left empty - the existing password will be kept.
   * @return password
  **/
  
  @ApiModelProperty(example = "12345", value = "user's password. Relevant for internal users only. Due to security issues, it is returned empty in the GET action. Note that in the PUT action password can be updated, but if left empty - the existing password will be kept.")
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "password")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public AlmaUser forcePasswordChange(String forcePasswordChange) {
    
    this.forcePasswordChange = forcePasswordChange;
    return this;
  }

   /**
   * Set this field to &#39;TRUE&#39; to prompt user to change the password on next log in. Relevant for internal users only.
   * @return forcePasswordChange
  **/
  
  @ApiModelProperty(example = "TRUE", value = "Set this field to 'TRUE' to prompt user to change the password on next log in. Relevant for internal users only.")
  @JsonProperty(JSON_PROPERTY_FORCE_PASSWORD_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "force_password_change")

  public String getForcePasswordChange() {
    return forcePasswordChange;
  }


  public void setForcePasswordChange(String forcePasswordChange) {
    this.forcePasswordChange = forcePasswordChange;
  }


  public AlmaUser status(UserStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  
  
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "status")

  public UserStatus getStatus() {
    return status;
  }


  public void setStatus(UserStatus status) {
    this.status = status;
  }


  public AlmaUser statusDate(Date statusDate) {
    
    this.statusDate = statusDate;
    return this;
  }

   /**
   * The date of the last update to user status.
   * @return statusDate
  **/
  
  @ApiModelProperty(value = "The date of the last update to user status.")
  @JsonProperty(JSON_PROPERTY_STATUS_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "status_date")

  public Date getStatusDate() {
    return statusDate;
  }


  public void setStatusDate(Date statusDate) {
    this.statusDate = statusDate;
  }


  public AlmaUser requests(UserRequests requests) {
    
    this.requests = requests;
    return this;
  }

   /**
   * Get requests
   * @return requests
  **/
  
  
  @JsonProperty(JSON_PROPERTY_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "requests")

  public UserRequests getRequests() {
    return requests;
  }


  public void setRequests(UserRequests requests) {
    this.requests = requests;
  }


  public AlmaUser loans(UserLoans loans) {
    
    this.loans = loans;
    return this;
  }

   /**
   * Get loans
   * @return loans
  **/
  
  @JsonProperty(JSON_PROPERTY_LOANS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "loans")

  public UserLoans getLoans() {
    return loans;
  }


  public void setLoans(UserLoans loans) {
    this.loans = loans;
  }


  public AlmaUser fees(UserFees fees) {
    
    this.fees = fees;
    return this;
  }

   /**
   * Get fees
   * @return fees
  **/
  
  
  @JsonProperty(JSON_PROPERTY_FEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "fees")

  public UserFees getFees() {
    return fees;
  }


  public void setFees(UserFees fees) {
    this.fees = fees;
  }


  public AlmaUser contactInfo(ContactInfo contactInfo) {
    
    this.contactInfo = contactInfo;
    return this;
  }

   /**
   * Get contactInfo
   * @return contactInfo
  **/
  
  
  @JsonProperty(JSON_PROPERTY_CONTACT_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "contact_info")

  public ContactInfo getContactInfo() {
    return contactInfo;
  }


  public void setContactInfo(ContactInfo contactInfo) {
    this.contactInfo = contactInfo;
  }


  public AlmaUser userIdentifier(List<UserIdentifier> userIdentifier) {
    
    this.userIdentifier = userIdentifier;
    return this;
  }

  public AlmaUser addUserIdentifierItem(UserIdentifier userIdentifierItem) {
    if (this.userIdentifier == null) {
      this.userIdentifier = new ArrayList<UserIdentifier>();
    }
    this.userIdentifier.add(userIdentifierItem);
    return this;
  }

   /**
   * List of the user&#39;s additional identifiers. For more information regarding case sensitivity see [here](https://developers.exlibrisgroup.com/blog/case-insensitive-identifiers-and-emails-in-alma/#identifiers_anchor). SIS: In case of new user, these segments will be marked as external. In case of synchronization, this list will replace the existing external identifiers. Internal identifiers will be kept. POST action: The segments will be created as external or as internal according to the segment_type attribute. PUT action: Incoming internal segments (based on the segment_type attribute) will replace the existing internal segments. Incoming external segments (based on the segment_type attribute) will replace the existing external segments. If the incoming list is empty, existing segments will be deleted.
   * @return userIdentifier
  **/
  
  @ApiModelProperty(value = "List of the user's additional identifiers. For more information regarding case sensitivity see [here](https://developers.exlibrisgroup.com/blog/case-insensitive-identifiers-and-emails-in-alma/#identifiers_anchor). SIS: In case of new user, these segments will be marked as external. In case of synchronization, this list will replace the existing external identifiers. Internal identifiers will be kept. POST action: The segments will be created as external or as internal according to the segment_type attribute. PUT action: Incoming internal segments (based on the segment_type attribute) will replace the existing internal segments. Incoming external segments (based on the segment_type attribute) will replace the existing external segments. If the incoming list is empty, existing segments will be deleted.")
  @JsonProperty(JSON_PROPERTY_USER_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "userIdentifier")

  public List<UserIdentifier> getUserIdentifier() {
    return userIdentifier;
  }


  public void setUserIdentifier(List<UserIdentifier> userIdentifier) {
    this.userIdentifier = userIdentifier;
  }


  public AlmaUser userRole(List<UserRole> userRole) {
    
    this.userRole = userRole;
    return this;
  }

  public AlmaUser addUserRoleItem(UserRole userRoleItem) {
    if (this.userRole == null) {
      this.userRole = new ArrayList<UserRole>();
    }
    this.userRole.add(userRoleItem);
    return this;
  }

   /**
   * List of the user&#39;s roles. SIS: roles are NOT part of the SIS load. POST action: If list of roles is supplied- these will be the roles. If list of roles was not supplied in the POST action, the user will be created with roles according to the role assignment rules (General &gt; User Management Configuration &gt; Configuration Menu &gt; Roles and Registration &gt; Role Assignment Rules). PUT action: If list of roles is supplied- it will replace the existing roles. If list of roles was not supplied in the PUT action, the existing roles will be kept (note that the roles behavior is different than the other segments: all user segments are deleted if the incoming list is empty. Only roles are kept in such case).
   * @return userRole
  **/
  
  @ApiModelProperty(value = "List of the user's roles. SIS: roles are NOT part of the SIS load. POST action: If list of roles is supplied- these will be the roles. If list of roles was not supplied in the POST action, the user will be created with roles according to the role assignment rules (General > User Management Configuration > Configuration Menu > Roles and Registration > Role Assignment Rules). PUT action: If list of roles is supplied- it will replace the existing roles. If list of roles was not supplied in the PUT action, the existing roles will be kept (note that the roles behavior is different than the other segments: all user segments are deleted if the incoming list is empty. Only roles are kept in such case).")
  @JsonProperty(JSON_PROPERTY_USER_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "userRole")

  public List<UserRole> getUserRole() {
    return userRole;
  }


  public void setUserRole(List<UserRole> userRole) {
    this.userRole = userRole;
  }


  public AlmaUser userBlock(List<UserBlock> userBlock) {
    
    this.userBlock = userBlock;
    return this;
  }

  public AlmaUser addUserBlockItem(UserBlock userBlockItem) {
    if (this.userBlock == null) {
      this.userBlock = new ArrayList<UserBlock>();
    }
    this.userBlock.add(userBlockItem);
    return this;
  }

   /**
   * List of user&#39;s blocks. SIS: In case of new user, these segments will be marked as external. In case of synchronization, this list will replace the existing external blocks. Internal blocks will be kept. POST action: The segments will be created as external or as internal according to the segment_type attribute. PUT action: Incoming internal segments (based on the segment_type attribute) will replace the existing internal segments. Incoming external segments (based on the segment_type attribute) will replace the existing external segments. If the incoming list is empty, existing segments will be deleted.
   * @return userBlock
  **/
  
  @ApiModelProperty(value = "List of user's blocks. SIS: In case of new user, these segments will be marked as external. In case of synchronization, this list will replace the existing external blocks. Internal blocks will be kept. POST action: The segments will be created as external or as internal according to the segment_type attribute. PUT action: Incoming internal segments (based on the segment_type attribute) will replace the existing internal segments. Incoming external segments (based on the segment_type attribute) will replace the existing external segments. If the incoming list is empty, existing segments will be deleted.")
  @JsonProperty(JSON_PROPERTY_USER_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "userBlock")

  public List<UserBlock> getUserBlock() {
    return userBlock;
  }


  public void setUserBlock(List<UserBlock> userBlock) {
    this.userBlock = userBlock;
  }


  public AlmaUser userNote(List<UserNote> userNote) {
    
    this.userNote = userNote;
    return this;
  }

  public AlmaUser addUserNoteItem(UserNote userNoteItem) {
    if (this.userNote == null) {
      this.userNote = new ArrayList<UserNote>();
    }
    this.userNote.add(userNoteItem);
    return this;
  }

   /**
   * List of the user&#39;s related notes. SIS: In case of new user, these segments will be marked as external. In case of synchronization, this list will replace the existing external notes. Internal notes will be kept. POST action: The segments will be created as external or as internal according to the segment_type attribute. PUT action: Incoming internal segments (based on the segment_type attribute) will replace the existing internal segments. Incoming external segments (based on the segment_type attribute) will replace the existing external segments. If the incoming list is empty, existing segments will be deleted.
   * @return userNote
  **/
  
  @ApiModelProperty(value = "List of the user's related notes. SIS: In case of new user, these segments will be marked as external. In case of synchronization, this list will replace the existing external notes. Internal notes will be kept. POST action: The segments will be created as external or as internal according to the segment_type attribute. PUT action: Incoming internal segments (based on the segment_type attribute) will replace the existing internal segments. Incoming external segments (based on the segment_type attribute) will replace the existing external segments. If the incoming list is empty, existing segments will be deleted.")
  @JsonProperty(JSON_PROPERTY_USER_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "userNote")

  public List<UserNote> getUserNote() {
    return userNote;
  }


  public void setUserNote(List<UserNote> userNote) {
    this.userNote = userNote;
  }


  public AlmaUser userStatistic(List<UserStatistic> userStatistic) {
    
    this.userStatistic = userStatistic;
    return this;
  }

  public AlmaUser addUserStatisticItem(UserStatistic userStatisticItem) {
    if (this.userStatistic == null) {
      this.userStatistic = new ArrayList<UserStatistic>();
    }
    this.userStatistic.add(userStatisticItem);
    return this;
  }

   /**
   * List of user&#39;s statistics. SIS: In case of new user, these segments will be marked as external. In case of synchronization, this list will replace the existing external statistics. Internal statistics will be kept. POST action: The segments will be created as external or as internal according to the segment_type attribute. PUT action: Incoming internal segments (based on the segment_type attribute) will replace the existing internal segments. Incoming external segments (based on the segment_type attribute) will replace the existing external segments. If the incoming list is empty, existing segments will be deleted.
   * @return userStatistic
  **/
  
  @ApiModelProperty(value = "List of user's statistics. SIS: In case of new user, these segments will be marked as external. In case of synchronization, this list will replace the existing external statistics. Internal statistics will be kept. POST action: The segments will be created as external or as internal according to the segment_type attribute. PUT action: Incoming internal segments (based on the segment_type attribute) will replace the existing internal segments. Incoming external segments (based on the segment_type attribute) will replace the existing external segments. If the incoming list is empty, existing segments will be deleted.")
  @JsonProperty(JSON_PROPERTY_USER_STATISTIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "userStatistic")

  public List<UserStatistic> getUserStatistic() {
    return userStatistic;
  }


  public void setUserStatistic(List<UserStatistic> userStatistic) {
    this.userStatistic = userStatistic;
  }


  public AlmaUser proxyForUser(List<ProxyForUser> proxyForUser) {
    
    this.proxyForUser = proxyForUser;
    return this;
  }

  public AlmaUser addProxyForUserItem(ProxyForUser proxyForUserItem) {
    if (this.proxyForUser == null) {
      this.proxyForUser = new ArrayList<ProxyForUser>();
    }
    this.proxyForUser.add(proxyForUserItem);
    return this;
  }

   /**
   * A list of proxy information for users.
   * @return proxyForUser
  **/
  
  @ApiModelProperty(value = "A list of proxy information for users.")
  @JsonProperty(JSON_PROPERTY_PROXY_FOR_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "proxyForUser")

  public List<ProxyForUser> getProxyForUser() {
    return proxyForUser;
  }


  public void setProxyForUser(List<ProxyForUser> proxyForUser) {
    this.proxyForUser = proxyForUser;
  }


  public AlmaUser rsLibrary(List<RsLibrary> rsLibrary) {
    
    this.rsLibrary = rsLibrary;
    return this;
  }

  public AlmaUser addRsLibraryItem(RsLibrary rsLibraryItem) {
    if (this.rsLibrary == null) {
      this.rsLibrary = new ArrayList<RsLibrary>();
    }
    this.rsLibrary.add(rsLibraryItem);
    return this;
  }

   /**
   * List of the user&#39;s related resource sharing libraries. On SIS synch this field will not be replaced if it was updated manually (or if empty in the incoming user record). For external users in PUT action: this field will not be replaced if it was updated manually (or if empty in the incoming user record), unless &#39;override&#39; parameter is sent with the field&#39;s name.
   * @return rsLibrary
  **/
  
  @ApiModelProperty(value = "List of the user's related resource sharing libraries. On SIS synch this field will not be replaced if it was updated manually (or if empty in the incoming user record). For external users in PUT action: this field will not be replaced if it was updated manually (or if empty in the incoming user record), unless 'override' parameter is sent with the field's name.")
  @JsonProperty(JSON_PROPERTY_RS_LIBRARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "rsLibrary")

  public List<RsLibrary> getRsLibrary() {
    return rsLibrary;
  }


  public void setRsLibrary(List<RsLibrary> rsLibrary) {
    this.rsLibrary = rsLibrary;
  }


  public AlmaUser libraryNotice(List<LibraryNotice> libraryNotice) {
    
    this.libraryNotice = libraryNotice;
    return this;
  }

  public AlmaUser addLibraryNoticeItem(LibraryNotice libraryNoticeItem) {
    if (this.libraryNotice == null) {
      this.libraryNotice = new ArrayList<LibraryNotice>();
    }
    this.libraryNotice.add(libraryNoticeItem);
    return this;
  }

   /**
   * List of the user&#39;s library notices. On SIS synch this field will not be replaced if it was updated manually (or if empty in the incoming user record). For external users in PUT action: this field will not be replaced if it was updated manually (or if empty in the incoming user record), unless &#39;override&#39; parameter is sent with the field&#39;s name.
   * @return libraryNotice
  **/
  
  @ApiModelProperty(value = "List of the user's library notices. On SIS synch this field will not be replaced if it was updated manually (or if empty in the incoming user record). For external users in PUT action: this field will not be replaced if it was updated manually (or if empty in the incoming user record), unless 'override' parameter is sent with the field's name.")
  @JsonProperty(JSON_PROPERTY_LIBRARY_NOTICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "libraryNotice")

  public List<LibraryNotice> getLibraryNotice() {
    return libraryNotice;
  }


  public void setLibraryNotice(List<LibraryNotice> libraryNotice) {
    this.libraryNotice = libraryNotice;
  }


  public AlmaUser sourceLinkId(String sourceLinkId) {
    
    this.sourceLinkId = sourceLinkId;
    return this;
  }

   /**
   * Reference to the system internal unique identifier at the institution identified by source_institution_code . This field is populated at the copy user record (linked account). The value is equal to the linking_id at the source institution (identified by source_institution_code).
   * @return sourceLinkId
  **/
  
  @ApiModelProperty(example = "2541663001021", value = "Reference to the system internal unique identifier at the institution identified by source_institution_code . This field is populated at the copy user record (linked account). The value is equal to the linking_id at the source institution (identified by source_institution_code).")
  @JsonProperty(JSON_PROPERTY_SOURCE_LINK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "source_link_id")

  public String getSourceLinkId() {
    return sourceLinkId;
  }


  public void setSourceLinkId(String sourceLinkId) {
    this.sourceLinkId = sourceLinkId;
  }


  public AlmaUser sourceInstitutionCode(String sourceInstitutionCode) {
    
    this.sourceInstitutionCode = sourceInstitutionCode;
    return this;
  }

   /**
   * The code of the institution where the source user record is managed. This field is populated at the copy user record (linked account).
   * @return sourceInstitutionCode
  **/
  
  @ApiModelProperty(example = "2541663001021", value = "The code of the institution where the source user record is managed. This field is populated at the copy user record (linked account).")
  @JsonProperty(JSON_PROPERTY_SOURCE_INSTITUTION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "source_institution_code")

  public String getSourceInstitutionCode() {
    return sourceInstitutionCode;
  }


  public void setSourceInstitutionCode(String sourceInstitutionCode) {
    this.sourceInstitutionCode = sourceInstitutionCode;
  }


  public AlmaUser linkingId(String linkingId) {
    
    this.linkingId = linkingId;
    return this;
  }

   /**
   * The system internal unique identifier of the source user account. This field is populated at the source user record. This can be used to fetch copies of the user record (linked accounts in other institutions) by calling the Get-User API with the source_institution_code parameter.
   * @return linkingId
  **/
  
  @ApiModelProperty(example = "5131558001021", value = "The system internal unique identifier of the source user account. This field is populated at the source user record. This can be used to fetch copies of the user record (linked accounts in other institutions) by calling the Get-User API with the source_institution_code parameter.")
  @JsonProperty(JSON_PROPERTY_LINKING_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "linking_id")

  public String getLinkingId() {
    return linkingId;
  }


  public void setLinkingId(String linkingId) {
    this.linkingId = linkingId;
  }


  public AlmaUser prefFirstName(String prefFirstName) {
    
    this.prefFirstName = prefFirstName;
    return this;
  }

   /**
   * The user&#39;s preferred first name.
   * @return prefFirstName
  **/
  
  @ApiModelProperty(example = "John", value = "The user's preferred first name.")
  @JsonProperty(JSON_PROPERTY_PREF_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "pref_first_name")

  public String getPrefFirstName() {
    return prefFirstName;
  }


  public void setPrefFirstName(String prefFirstName) {
    this.prefFirstName = prefFirstName;
  }


  public AlmaUser prefMiddleName(String prefMiddleName) {
    
    this.prefMiddleName = prefMiddleName;
    return this;
  }

   /**
   * The user&#39;s preferred middle name.
   * @return prefMiddleName
  **/
  
  @ApiModelProperty(example = "W", value = "The user's preferred middle name.")
  @JsonProperty(JSON_PROPERTY_PREF_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "pref_middle_name")

  public String getPrefMiddleName() {
    return prefMiddleName;
  }


  public void setPrefMiddleName(String prefMiddleName) {
    this.prefMiddleName = prefMiddleName;
  }


  public AlmaUser prefLastName(String prefLastName) {
    
    this.prefLastName = prefLastName;
    return this;
  }

   /**
   * The user&#39;s preferred last name.
   * @return prefLastName
  **/
  
  @ApiModelProperty(example = "Smith", value = "The user's preferred last name.")
  @JsonProperty(JSON_PROPERTY_PREF_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "pref_last_name")

  public String getPrefLastName() {
    return prefLastName;
  }


  public void setPrefLastName(String prefLastName) {
    this.prefLastName = prefLastName;
  }


  public AlmaUser prefNameSuffix(String prefNameSuffix) {
    
    this.prefNameSuffix = prefNameSuffix;
    return this;
  }

   /**
   * The user&#39;s name suffix. This field is only relevant to Esploro researchers.
   * @return prefNameSuffix
  **/
  
  @ApiModelProperty(example = "Junior", value = "The user's name suffix. This field is only relevant to Esploro researchers.")
  @JsonProperty(JSON_PROPERTY_PREF_NAME_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "pref_name_suffix")

  public String getPrefNameSuffix() {
    return prefNameSuffix;
  }


  public void setPrefNameSuffix(String prefNameSuffix) {
    this.prefNameSuffix = prefNameSuffix;
  }


  public AlmaUser isResearcher(Boolean isResearcher) {
    
    this.isResearcher = isResearcher;
    return this;
  }

   /**
   * Indication whether the user is a researcher. Default is false. For Esploro use only.
   * @return isResearcher
  **/
  
  @ApiModelProperty(example = "false", value = "Indication whether the user is a researcher. Default is false. For Esploro use only.")
  @JsonProperty(JSON_PROPERTY_IS_RESEARCHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "is_researcher")

  public Boolean getIsResearcher() {
    return isResearcher;
  }


  public void setIsResearcher(Boolean isResearcher) {
    this.isResearcher = isResearcher;
  }


  public AlmaUser researcher(Object researcher) {
    
    this.researcher = researcher;
    return this;
  }

   /**
   * Get researcher
   * @return researcher
  **/
  
  
  @JsonProperty(JSON_PROPERTY_RESEARCHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "researcher")

  public Object getResearcher() {
    return researcher;
  }


  public void setResearcher(Object researcher) {
    this.researcher = researcher;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlmaUser almaUser2 = (AlmaUser) o;
    return Objects.equals(this.link, almaUser2.link) &&
        Objects.equals(this.recordType, almaUser2.recordType) &&
        Objects.equals(this.primaryId, almaUser2.primaryId) &&
        Objects.equals(this.firstName, almaUser2.firstName) &&
        Objects.equals(this.middleName, almaUser2.middleName) &&
        Objects.equals(this.lastName, almaUser2.lastName) &&
        Objects.equals(this.fullName, almaUser2.fullName) &&
        Objects.equals(this.pinNumber, almaUser2.pinNumber) &&
        Objects.equals(this.userTitle, almaUser2.userTitle) &&
        Objects.equals(this.jobCategory, almaUser2.jobCategory) &&
        Objects.equals(this.jobDescription, almaUser2.jobDescription) &&
        Objects.equals(this.gender, almaUser2.gender) &&
        Objects.equals(this.userGroup, almaUser2.userGroup) &&
        Objects.equals(this.campusCode, almaUser2.campusCode) &&
        Objects.equals(this.webSiteUrl, almaUser2.webSiteUrl) &&
        Objects.equals(this.catalogerLevel, almaUser2.catalogerLevel) &&
        Objects.equals(this.preferredLanguage, almaUser2.preferredLanguage) &&
        Objects.equals(this.birthDate, almaUser2.birthDate) &&
        Objects.equals(this.expiryDate, almaUser2.expiryDate) &&
        Objects.equals(this.purgeDate, almaUser2.purgeDate) &&
        Objects.equals(this.accountType, almaUser2.accountType) &&
        Objects.equals(this.externalId, almaUser2.externalId) &&
        Objects.equals(this.password, almaUser2.password) &&
        Objects.equals(this.forcePasswordChange, almaUser2.forcePasswordChange) &&
        Objects.equals(this.status, almaUser2.status) &&
        Objects.equals(this.statusDate, almaUser2.statusDate) &&
        Objects.equals(this.requests, almaUser2.requests) &&
        Objects.equals(this.loans, almaUser2.loans) &&
        Objects.equals(this.fees, almaUser2.fees) &&
        Objects.equals(this.contactInfo, almaUser2.contactInfo) &&
        Objects.equals(this.userIdentifier, almaUser2.userIdentifier) &&
        Objects.equals(this.userRole, almaUser2.userRole) &&
        Objects.equals(this.userBlock, almaUser2.userBlock) &&
        Objects.equals(this.userNote, almaUser2.userNote) &&
        Objects.equals(this.userStatistic, almaUser2.userStatistic) &&
        Objects.equals(this.proxyForUser, almaUser2.proxyForUser) &&
        Objects.equals(this.rsLibrary, almaUser2.rsLibrary) &&
        Objects.equals(this.libraryNotice, almaUser2.libraryNotice) &&
        Objects.equals(this.sourceLinkId, almaUser2.sourceLinkId) &&
        Objects.equals(this.sourceInstitutionCode, almaUser2.sourceInstitutionCode) &&
        Objects.equals(this.linkingId, almaUser2.linkingId) &&
        Objects.equals(this.prefFirstName, almaUser2.prefFirstName) &&
        Objects.equals(this.prefMiddleName, almaUser2.prefMiddleName) &&
        Objects.equals(this.prefLastName, almaUser2.prefLastName) &&
        Objects.equals(this.prefNameSuffix, almaUser2.prefNameSuffix) &&
        Objects.equals(this.isResearcher, almaUser2.isResearcher) &&
        Objects.equals(this.researcher, almaUser2.researcher);
  }

  @Override
  public int hashCode() {
    return Objects.hash(link, recordType, primaryId, firstName, middleName, lastName, fullName, pinNumber, userTitle, jobCategory, jobDescription, gender, userGroup, campusCode, webSiteUrl, catalogerLevel, preferredLanguage, birthDate, expiryDate, purgeDate, accountType, externalId, password, forcePasswordChange, status, statusDate, requests, loans, fees, contactInfo, userIdentifier, userRole, userBlock, userNote, userStatistic, proxyForUser, rsLibrary, libraryNotice, sourceLinkId, sourceInstitutionCode, linkingId, prefFirstName, prefMiddleName, prefLastName, prefNameSuffix, isResearcher, researcher);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User2 {\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    primaryId: ").append(toIndentedString(primaryId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    pinNumber: ").append(toIndentedString(pinNumber)).append("\n");
    sb.append("    userTitle: ").append(toIndentedString(userTitle)).append("\n");
    sb.append("    jobCategory: ").append(toIndentedString(jobCategory)).append("\n");
    sb.append("    jobDescription: ").append(toIndentedString(jobDescription)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    userGroup: ").append(toIndentedString(userGroup)).append("\n");
    sb.append("    campusCode: ").append(toIndentedString(campusCode)).append("\n");
    sb.append("    webSiteUrl: ").append(toIndentedString(webSiteUrl)).append("\n");
    sb.append("    catalogerLevel: ").append(toIndentedString(catalogerLevel)).append("\n");
    sb.append("    preferredLanguage: ").append(toIndentedString(preferredLanguage)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    purgeDate: ").append(toIndentedString(purgeDate)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    forcePasswordChange: ").append(toIndentedString(forcePasswordChange)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDate: ").append(toIndentedString(statusDate)).append("\n");
    sb.append("    requests: ").append(toIndentedString(requests)).append("\n");
    sb.append("    loans: ").append(toIndentedString(loans)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    contactInfo: ").append(toIndentedString(contactInfo)).append("\n");
    sb.append("    userIdentifier: ").append(toIndentedString(userIdentifier)).append("\n");
    sb.append("    userRole: ").append(toIndentedString(userRole)).append("\n");
    sb.append("    userBlock: ").append(toIndentedString(userBlock)).append("\n");
    sb.append("    userNote: ").append(toIndentedString(userNote)).append("\n");
    sb.append("    userStatistic: ").append(toIndentedString(userStatistic)).append("\n");
    sb.append("    proxyForUser: ").append(toIndentedString(proxyForUser)).append("\n");
    sb.append("    rsLibrary: ").append(toIndentedString(rsLibrary)).append("\n");
    sb.append("    libraryNotice: ").append(toIndentedString(libraryNotice)).append("\n");
    sb.append("    sourceLinkId: ").append(toIndentedString(sourceLinkId)).append("\n");
    sb.append("    sourceInstitutionCode: ").append(toIndentedString(sourceInstitutionCode)).append("\n");
    sb.append("    linkingId: ").append(toIndentedString(linkingId)).append("\n");
    sb.append("    prefFirstName: ").append(toIndentedString(prefFirstName)).append("\n");
    sb.append("    prefMiddleName: ").append(toIndentedString(prefMiddleName)).append("\n");
    sb.append("    prefLastName: ").append(toIndentedString(prefLastName)).append("\n");
    sb.append("    prefNameSuffix: ").append(toIndentedString(prefNameSuffix)).append("\n");
    sb.append("    isResearcher: ").append(toIndentedString(isResearcher)).append("\n");
    sb.append("    researcher: ").append(toIndentedString(researcher)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

