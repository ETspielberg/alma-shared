/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.acq;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;

/**
 * A specific vendor interface.
 */
@ApiModel(description = "A specific vendor interface.")
@JsonPropertyOrder({
  AlmaInterface.JSON_PROPERTY_NAME,
  AlmaInterface.JSON_PROPERTY_DESCRIPTION,
  AlmaInterface.JSON_PROPERTY_STATUS,
  AlmaInterface.JSON_PROPERTY_MAIN_NOTE,
  AlmaInterface.JSON_PROPERTY_CONTACT_INFO,
  AlmaInterface.JSON_PROPERTY_ADMIN_INFO,
  AlmaInterface.JSON_PROPERTY_STATISTICS,
  AlmaInterface.JSON_PROPERTY_ACCESS_INFO,
  AlmaInterface.JSON_PROPERTY_INTERFACE_NOTES
})

@XmlRootElement(name = "interface")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "interface")
public class AlmaInterface implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  @XmlElement(name = "name")
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @XmlElement(name = "description")
  private String description;

  public static final String JSON_PROPERTY_STATUS = "status";
  @XmlElement(name = "status")
  private InterfaceStatus status;

  public static final String JSON_PROPERTY_MAIN_NOTE = "main_note";
  @XmlElement(name = "main_note")
  private String mainNote;

  public static final String JSON_PROPERTY_CONTACT_INFO = "contact_info";
  @XmlElement(name = "contact_info")
  private ContactInfo contactInfo;

  public static final String JSON_PROPERTY_ADMIN_INFO = "admin_info";
  @XmlElement(name = "admin_info")
  private AdminInfo adminInfo;

  public static final String JSON_PROPERTY_STATISTICS = "statistics";
  @XmlElement(name = "statistics")
  private Statistics statistics;

  public static final String JSON_PROPERTY_ACCESS_INFO = "access_info";
  @XmlElement(name = "access_info")
  private AccessInfo accessInfo;

  public static final String JSON_PROPERTY_INTERFACE_NOTES = "interface_notes";
  @XmlElement(name = "interface_notes")
  private Object interfaceNotes = null;


  public AlmaInterface name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The interface name. Mandatory.
   * @return name
  **/

  @ApiModelProperty(example = "The Bookhouse, Inc.", value = "The interface name. Mandatory.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public AlmaInterface description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The interface description.
   * @return description
  **/

  @ApiModelProperty(example = "The Bookhouse, Inc.", value = "The interface description.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public AlmaInterface status(InterfaceStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "status")

  public InterfaceStatus getStatus() {
    return status;
  }


  public void setStatus(InterfaceStatus status) {
    this.status = status;
  }


  public AlmaInterface mainNote(String mainNote) {
    
    this.mainNote = mainNote;
    return this;
  }

   /**
   * The interface&#39;s related note.
   * @return mainNote
  **/

  @ApiModelProperty(value = "The interface's related note.")
  @JsonProperty(JSON_PROPERTY_MAIN_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "main_note")

  public String getMainNote() {
    return mainNote;
  }


  public void setMainNote(String mainNote) {
    this.mainNote = mainNote;
  }


  public AlmaInterface contactInfo(ContactInfo contactInfo) {
    
    this.contactInfo = contactInfo;
    return this;
  }

   /**
   * Get contactInfo
   * @return contactInfo
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONTACT_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "contact_info")

  public ContactInfo getContactInfo() {
    return contactInfo;
  }


  public void setContactInfo(ContactInfo contactInfo) {
    this.contactInfo = contactInfo;
  }


  public AlmaInterface adminInfo(AdminInfo adminInfo) {
    
    this.adminInfo = adminInfo;
    return this;
  }

   /**
   * Get adminInfo
   * @return adminInfo
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADMIN_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "admin_info")

  public AdminInfo getAdminInfo() {
    return adminInfo;
  }


  public void setAdminInfo(AdminInfo adminInfo) {
    this.adminInfo = adminInfo;
  }


  public AlmaInterface statistics(Statistics statistics) {
    
    this.statistics = statistics;
    return this;
  }

   /**
   * Get statistics
   * @return statistics
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATISTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "statistics")

  public Statistics getStatistics() {
    return statistics;
  }


  public void setStatistics(Statistics statistics) {
    this.statistics = statistics;
  }


  public AlmaInterface accessInfo(AccessInfo accessInfo) {
    
    this.accessInfo = accessInfo;
    return this;
  }

   /**
   * Get accessInfo
   * @return accessInfo
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACCESS_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "access_info")

  public AccessInfo getAccessInfo() {
    return accessInfo;
  }


  public void setAccessInfo(AccessInfo accessInfo) {
    this.accessInfo = accessInfo;
  }


  public AlmaInterface interfaceNotes(Object interfaceNotes) {
    
    this.interfaceNotes = interfaceNotes;
    return this;
  }

   /**
   * Get interfaceNotes
   * @return interfaceNotes
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INTERFACE_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "interface_notes")

  public Object getInterfaceNotes() {
    return interfaceNotes;
  }


  public void setInterfaceNotes(Object interfaceNotes) {
    this.interfaceNotes = interfaceNotes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlmaInterface almaInterface = (AlmaInterface) o;
    return Objects.equals(this.name, almaInterface.name) &&
        Objects.equals(this.description, almaInterface.description) &&
        Objects.equals(this.status, almaInterface.status) &&
        Objects.equals(this.mainNote, almaInterface.mainNote) &&
        Objects.equals(this.contactInfo, almaInterface.contactInfo) &&
        Objects.equals(this.adminInfo, almaInterface.adminInfo) &&
        Objects.equals(this.statistics, almaInterface.statistics) &&
        Objects.equals(this.accessInfo, almaInterface.accessInfo) &&
        Objects.equals(this.interfaceNotes, almaInterface.interfaceNotes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, status, mainNote, contactInfo, adminInfo, statistics, accessInfo, interfaceNotes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Interface2 {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    mainNote: ").append(toIndentedString(mainNote)).append("\n");
    sb.append("    contactInfo: ").append(toIndentedString(contactInfo)).append("\n");
    sb.append("    adminInfo: ").append(toIndentedString(adminInfo)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("    accessInfo: ").append(toIndentedString(accessInfo)).append("\n");
    sb.append("    interfaceNotes: ").append(toIndentedString(interfaceNotes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

