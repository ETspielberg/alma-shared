/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.acq;

import java.util.Date;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;

/**
 * Invoice line Object.
 */
@ApiModel(description = "Invoice line Object.")
@JsonPropertyOrder({
  InvoiceLine.JSON_PROPERTY_ID,
  InvoiceLine.JSON_PROPERTY_TYPE,
  InvoiceLine.JSON_PROPERTY_NUMBER,
  InvoiceLine.JSON_PROPERTY_STATUS,
  InvoiceLine.JSON_PROPERTY_PO_LINE,
  InvoiceLine.JSON_PROPERTY_PRICE,
  InvoiceLine.JSON_PROPERTY_PRICE_NOTE,
  InvoiceLine.JSON_PROPERTY_TOTAL_PRICE,
  InvoiceLine.JSON_PROPERTY_QUANTITY,
  InvoiceLine.JSON_PROPERTY_VAT_NOTE,
  InvoiceLine.JSON_PROPERTY_CHECK_SUBSCRIPTION_DATE_OVERLAP,
  InvoiceLine.JSON_PROPERTY_FULLY_INVOICED,
  InvoiceLine.JSON_PROPERTY_SUBSCRIPTION_FROM_DATE,
  InvoiceLine.JSON_PROPERTY_SUBSCRIPTION_TO_DATE,
  InvoiceLine.JSON_PROPERTY_ADDITIONAL_INFO,
  InvoiceLine.JSON_PROPERTY_RELEASE_REMAINING_ENCUMBRANCE,
  InvoiceLine.JSON_PROPERTY_REPORTING_CODE,
  InvoiceLine.JSON_PROPERTY_SECONDARY_REPORTING_CODE,
  InvoiceLine.JSON_PROPERTY_TERTIARY_REPORTING_CODE,
  InvoiceLine.JSON_PROPERTY_NOTE,
  InvoiceLine.JSON_PROPERTY_INVOICE_LINE_VAT,
  InvoiceLine.JSON_PROPERTY_FUND_DISTRIBUTION
})

@XmlRootElement(name = "invoice_line")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "invoice_line")
public class InvoiceLine implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  @XmlElement(name = "id")
  private String id;

  public static final String JSON_PROPERTY_TYPE = "type";
  @XmlElement(name = "type")
  private InvoiceLineType type;

  public static final String JSON_PROPERTY_NUMBER = "number";
  @XmlElement(name = "number")
  private String number;

  public static final String JSON_PROPERTY_STATUS = "status";
  @XmlElement(name = "status")
  private InvoiceLineStatus status;

  public static final String JSON_PROPERTY_PO_LINE = "po_line";
  @XmlElement(name = "po_line")
  private String poLine;

  public static final String JSON_PROPERTY_PRICE = "price";
  @XmlElement(name = "price")
  private Double price;

  public static final String JSON_PROPERTY_PRICE_NOTE = "price_note";
  @XmlElement(name = "price_note")
  private String priceNote;

  public static final String JSON_PROPERTY_TOTAL_PRICE = "total_price";
  @XmlElement(name = "total_price")
  private Double totalPrice;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  @XmlElement(name = "quantity")
  private Integer quantity;

  public static final String JSON_PROPERTY_VAT_NOTE = "vat_note";
  @XmlElement(name = "vat_note")
  private String vatNote;

  public static final String JSON_PROPERTY_CHECK_SUBSCRIPTION_DATE_OVERLAP = "check_subscription_date_overlap";
  @XmlElement(name = "check_subscription_date_overlap")
  private Boolean checkSubscriptionDateOverlap;

  public static final String JSON_PROPERTY_FULLY_INVOICED = "fully_invoiced";
  @XmlElement(name = "fully_invoiced")
  private Boolean fullyInvoiced;

  public static final String JSON_PROPERTY_SUBSCRIPTION_FROM_DATE = "subscription_from_date";
  @XmlElement(name = "subscription_from_date")
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'Z'")
  private Date subscriptionFromDate;

  public static final String JSON_PROPERTY_SUBSCRIPTION_TO_DATE = "subscription_to_date";
  @XmlElement(name = "subscription_to_date")
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'Z'")
  private Date subscriptionToDate;

  public static final String JSON_PROPERTY_ADDITIONAL_INFO = "additional_info";
  @XmlElement(name = "additional_info")
  private String additionalInfo;

  public static final String JSON_PROPERTY_RELEASE_REMAINING_ENCUMBRANCE = "release_remaining_encumbrance";
  @XmlElement(name = "release_remaining_encumbrance")
  private Boolean releaseRemainingEncumbrance;

  public static final String JSON_PROPERTY_REPORTING_CODE = "reporting_code";
  @XmlElement(name = "reporting_code")
  private InvoiceLineReportingCode reportingCode;

  public static final String JSON_PROPERTY_SECONDARY_REPORTING_CODE = "secondary_reporting_code";
  @XmlElement(name = "secondary_reporting_code")
  private InvoiceLineSecondaryReportingCode secondaryReportingCode;

  public static final String JSON_PROPERTY_TERTIARY_REPORTING_CODE = "tertiary_reporting_code";
  @XmlElement(name = "tertiary_reporting_code")
  private InvoiceLineTertiaryReportingCode tertiaryReportingCode;

  public static final String JSON_PROPERTY_NOTE = "note";
  @XmlElement(name = "note")
  private String note;

  public static final String JSON_PROPERTY_INVOICE_LINE_VAT = "invoice_line_vat";
  @XmlElement(name = "invoice_line_vat")
  private InvoiceLineVat invoiceLineVat;

  public static final String JSON_PROPERTY_FUND_DISTRIBUTION = "fund_distribution";
  // Is a container wrapped=true
  // items.name=fundDistribution items.baseName=fundDistribution items.xmlName= items.xmlNamespace=
  // items.example= items.type=FundDistribution
  @XmlElement(name = "fundDistribution")
  @XmlElementWrapper(name = "fund_distributions")
  private List<FundDistribution> fundDistribution = null;


  public InvoiceLine id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the invoice line. Output parameter. Should be used in subsequent queries regarding the line.
   * @return id
  **/
  
  @ApiModelProperty(example = "15334101100001021", value = "Unique identifier of the invoice line. Output parameter. Should be used in subsequent queries regarding the line.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "id")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public InvoiceLine type(InvoiceLineType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "type")

  public InvoiceLineType getType() {
    return type;
  }


  public void setType(InvoiceLineType type) {
    this.type = type;
  }


  public InvoiceLine number(String number) {
    
    this.number = number;
    return this;
  }

   /**
   * The invoice line number. Optional. If not supplied in POST action, Alma will generate it. Cannot be updated by the PUT action.
   * @return number
  **/
  
  @ApiModelProperty(example = "10", value = "The invoice line number. Optional. If not supplied in POST action, Alma will generate it. Cannot be updated by the PUT action.")
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "number")

  public String getNumber() {
    return number;
  }


  public void setNumber(String number) {
    this.number = number;
  }


  public InvoiceLine status(InvoiceLineStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "status")

  public InvoiceLineStatus getStatus() {
    return status;
  }


  public void setStatus(InvoiceLineStatus status) {
    this.status = status;
  }


  public InvoiceLine poLine(String poLine) {
    
    this.poLine = poLine;
    return this;
  }

   /**
   * The number of the PO line which is connected to the invoice line. Optional.
   * @return poLine
  **/
  
  @ApiModelProperty(example = "20", value = "The number of the PO line which is connected to the invoice line. Optional.")
  @JsonProperty(JSON_PROPERTY_PO_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "po_line")

  public String getPoLine() {
    return poLine;
  }


  public void setPoLine(String poLine) {
    this.poLine = poLine;
  }


  public InvoiceLine price(Double price) {
    
    this.price = price;
    return this;
  }

   /**
   * The price of the invoice line. Default is the PO line price.
   * @return price
  **/
  
  @ApiModelProperty(example = "50.0", value = "The price of the invoice line. Default is the PO line price.")
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "price")

  public Double getPrice() {
    return price;
  }


  public void setPrice(Double price) {
    this.price = price;
  }


  public InvoiceLine priceNote(String priceNote) {
    
    this.priceNote = priceNote;
    return this;
  }

   /**
   * The price note of the invoice line.
   * @return priceNote
  **/
  
  @ApiModelProperty(value = "The price note of the invoice line.")
  @JsonProperty(JSON_PROPERTY_PRICE_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "price_note")

  public String getPriceNote() {
    return priceNote;
  }


  public void setPriceNote(String priceNote) {
    this.priceNote = priceNote;
  }


  public InvoiceLine totalPrice(Double totalPrice) {
    
    this.totalPrice = totalPrice;
    return this;
  }

   /**
   * The total price of the specific invoice line. Output parameter.
   * @return totalPrice
  **/
  
  @ApiModelProperty(example = "100.0", value = "The total price of the specific invoice line. Output parameter.")
  @JsonProperty(JSON_PROPERTY_TOTAL_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "total_price")

  public Double getTotalPrice() {
    return totalPrice;
  }


  public void setTotalPrice(Double totalPrice) {
    this.totalPrice = totalPrice;
  }


  public InvoiceLine quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * The quantity for the invoice line. Default is the PO line quantity.
   * @return quantity
  **/
  
  @ApiModelProperty(example = "10", value = "The quantity for the invoice line. Default is the PO line quantity.")
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "quantity")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public InvoiceLine vatNote(String vatNote) {
    
    this.vatNote = vatNote;
    return this;
  }

   /**
   * VAT related note. Relevant only if VAT is defined at the invoice level.
   * @return vatNote
  **/
  
  @ApiModelProperty(value = "VAT related note. Relevant only if VAT is defined at the invoice level.")
  @JsonProperty(JSON_PROPERTY_VAT_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "vat_note")

  public String getVatNote() {
    return vatNote;
  }


  public void setVatNote(String vatNote) {
    this.vatNote = vatNote;
  }


  public InvoiceLine checkSubscriptionDateOverlap(Boolean checkSubscriptionDateOverlap) {
    
    this.checkSubscriptionDateOverlap = checkSubscriptionDateOverlap;
    return this;
  }

   /**
   * Indication whether Alma should check if the subscription date overlaps with those of any other lines. Relevant only when a continuous PO line is selected. Default is true.
   * @return checkSubscriptionDateOverlap
  **/
  
  @ApiModelProperty(example = "false", value = "Indication whether Alma should check if the subscription date overlaps with those of any other lines. Relevant only when a continuous PO line is selected. Default is true.")
  @JsonProperty(JSON_PROPERTY_CHECK_SUBSCRIPTION_DATE_OVERLAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "check_subscription_date_overlap")

  public Boolean getCheckSubscriptionDateOverlap() {
    return checkSubscriptionDateOverlap;
  }


  public void setCheckSubscriptionDateOverlap(Boolean checkSubscriptionDateOverlap) {
    this.checkSubscriptionDateOverlap = checkSubscriptionDateOverlap;
  }


  public InvoiceLine fullyInvoiced(Boolean fullyInvoiced) {
    
    this.fullyInvoiced = fullyInvoiced;
    return this;
  }

   /**
   * Indication whether the PO line has been fully invoiced. This creates a disencumbrance transaction for any encumbered amounts. Relevant only when a one-time PO line is selected. Default is false.
   * @return fullyInvoiced
  **/
  
  @ApiModelProperty(example = "false", value = "Indication whether the PO line has been fully invoiced. This creates a disencumbrance transaction for any encumbered amounts. Relevant only when a one-time PO line is selected. Default is false.")
  @JsonProperty(JSON_PROPERTY_FULLY_INVOICED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "fully_invoiced")

  public Boolean getFullyInvoiced() {
    return fullyInvoiced;
  }


  public void setFullyInvoiced(Boolean fullyInvoiced) {
    this.fullyInvoiced = fullyInvoiced;
  }


  public InvoiceLine subscriptionFromDate(Date subscriptionFromDate) {
    
    this.subscriptionFromDate = subscriptionFromDate;
    return this;
  }

   /**
   * The date from which the invoice line is covered. Relevant only when a continuous PO line is selected. Mandatory if check_subscription_date_overlap is true.
   * @return subscriptionFromDate
  **/
  
  @ApiModelProperty(value = "The date from which the invoice line is covered. Relevant only when a continuous PO line is selected. Mandatory if check_subscription_date_overlap is true.")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_FROM_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "subscription_from_date")

  public Date getSubscriptionFromDate() {
    return subscriptionFromDate;
  }


  public void setSubscriptionFromDate(Date subscriptionFromDate) {
    this.subscriptionFromDate = subscriptionFromDate;
  }


  public InvoiceLine subscriptionToDate(Date subscriptionToDate) {
    
    this.subscriptionToDate = subscriptionToDate;
    return this;
  }

   /**
   * The date to which the invoice line is covered. Relevant only when a continuous PO line is selected. Mandatory if check_subscription_date_overlap is true.
   * @return subscriptionToDate
  **/
  
  @ApiModelProperty(value = "The date to which the invoice line is covered. Relevant only when a continuous PO line is selected. Mandatory if check_subscription_date_overlap is true.")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_TO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "subscription_to_date")

  public Date getSubscriptionToDate() {
    return subscriptionToDate;
  }


  public void setSubscriptionToDate(Date subscriptionToDate) {
    this.subscriptionToDate = subscriptionToDate;
  }


  public InvoiceLine additionalInfo(String additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

   /**
   * A note. Relevant only when a continuous PO line is selected. Mandatory if the Subscription from date and Subscription to date fields are empty.
   * @return additionalInfo
  **/
  
  @ApiModelProperty(value = "A note. Relevant only when a continuous PO line is selected. Mandatory if the Subscription from date and Subscription to date fields are empty.")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "additional_info")

  public String getAdditionalInfo() {
    return additionalInfo;
  }


  public void setAdditionalInfo(String additionalInfo) {
    this.additionalInfo = additionalInfo;
  }


  public InvoiceLine releaseRemainingEncumbrance(Boolean releaseRemainingEncumbrance) {
    
    this.releaseRemainingEncumbrance = releaseRemainingEncumbrance;
    return this;
  }

   /**
   * Indication whether Alma should create a disencumbrance transaction to release encumbrance amounts that remain after paying an invoice. Relevant only when a continuous PO line is selected. Relevant only when the total invoice line price is lower than the PO line price. Default is false.
   * @return releaseRemainingEncumbrance
  **/
  
  @ApiModelProperty(example = "false", value = "Indication whether Alma should create a disencumbrance transaction to release encumbrance amounts that remain after paying an invoice. Relevant only when a continuous PO line is selected. Relevant only when the total invoice line price is lower than the PO line price. Default is false.")
  @JsonProperty(JSON_PROPERTY_RELEASE_REMAINING_ENCUMBRANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "release_remaining_encumbrance")

  public Boolean getReleaseRemainingEncumbrance() {
    return releaseRemainingEncumbrance;
  }


  public void setReleaseRemainingEncumbrance(Boolean releaseRemainingEncumbrance) {
    this.releaseRemainingEncumbrance = releaseRemainingEncumbrance;
  }


  public InvoiceLine reportingCode(InvoiceLineReportingCode reportingCode) {
    
    this.reportingCode = reportingCode;
    return this;
  }

   /**
   * Get reportingCode
   * @return reportingCode
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REPORTING_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "reporting_code")

  public InvoiceLineReportingCode getReportingCode() {
    return reportingCode;
  }


  public void setReportingCode(InvoiceLineReportingCode reportingCode) {
    this.reportingCode = reportingCode;
  }


  public InvoiceLine secondaryReportingCode(InvoiceLineSecondaryReportingCode secondaryReportingCode) {
    
    this.secondaryReportingCode = secondaryReportingCode;
    return this;
  }

   /**
   * Get secondaryReportingCode
   * @return secondaryReportingCode
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SECONDARY_REPORTING_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "secondary_reporting_code")

  public InvoiceLineSecondaryReportingCode getSecondaryReportingCode() {
    return secondaryReportingCode;
  }


  public void setSecondaryReportingCode(InvoiceLineSecondaryReportingCode secondaryReportingCode) {
    this.secondaryReportingCode = secondaryReportingCode;
  }


  public InvoiceLine tertiaryReportingCode(InvoiceLineTertiaryReportingCode tertiaryReportingCode) {
    
    this.tertiaryReportingCode = tertiaryReportingCode;
    return this;
  }

   /**
   * Get tertiaryReportingCode
   * @return tertiaryReportingCode
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TERTIARY_REPORTING_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "tertiary_reporting_code")

  public InvoiceLineTertiaryReportingCode getTertiaryReportingCode() {
    return tertiaryReportingCode;
  }


  public void setTertiaryReportingCode(InvoiceLineTertiaryReportingCode tertiaryReportingCode) {
    this.tertiaryReportingCode = tertiaryReportingCode;
  }


  public InvoiceLine note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * Free text note.
   * @return note
  **/
  
  @ApiModelProperty(value = "Free text note.")
  @JsonProperty(JSON_PROPERTY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "note")

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  public InvoiceLine invoiceLineVat(InvoiceLineVat invoiceLineVat) {
    
    this.invoiceLineVat = invoiceLineVat;
    return this;
  }

   /**
   * Get invoiceLineVat
   * @return invoiceLineVat
  **/
  
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INVOICE_LINE_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "invoice_line_vat")

  public InvoiceLineVat getInvoiceLineVat() {
    return invoiceLineVat;
  }


  public void setInvoiceLineVat(InvoiceLineVat invoiceLineVat) {
    this.invoiceLineVat = invoiceLineVat;
  }


  public InvoiceLine fundDistribution(List<FundDistribution> fundDistribution) {
    
    this.fundDistribution = fundDistribution;
    return this;
  }

  public InvoiceLine addFundDistributionItem(FundDistribution fundDistributionItem) {
    if (this.fundDistribution == null) {
      this.fundDistribution = new ArrayList<FundDistribution>();
    }
    this.fundDistribution.add(fundDistributionItem);
    return this;
  }

   /**
   * The Fund Distributions list. Mandatory for processing the invoice line. [Get funds API](https://developers.exlibrisgroup.com/alma/apis/acq/GET/gwPcGly021oUHLI4O/zpt8U7ewiJYRLM/d5b14609-b590-470e-baba-9944682f8c7e).
   * @return fundDistribution
  **/
  
  @ApiModelProperty(value = "The Fund Distributions list. Mandatory for processing the invoice line. [Get funds API](https://developers.exlibrisgroup.com/alma/apis/acq/GET/gwPcGly021oUHLI4O/zpt8U7ewiJYRLM/d5b14609-b590-470e-baba-9944682f8c7e).")
  @JsonProperty(JSON_PROPERTY_FUND_DISTRIBUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  // items.xmlName=
  @JacksonXmlElementWrapper(useWrapping = true, localName = "fundDistribution")

  public List<FundDistribution> getFundDistribution() {
    return fundDistribution;
  }


  public void setFundDistribution(List<FundDistribution> fundDistribution) {
    this.fundDistribution = fundDistribution;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceLine invoiceLine = (InvoiceLine) o;
    return Objects.equals(this.id, invoiceLine.id) &&
        Objects.equals(this.type, invoiceLine.type) &&
        Objects.equals(this.number, invoiceLine.number) &&
        Objects.equals(this.status, invoiceLine.status) &&
        Objects.equals(this.poLine, invoiceLine.poLine) &&
        Objects.equals(this.price, invoiceLine.price) &&
        Objects.equals(this.priceNote, invoiceLine.priceNote) &&
        Objects.equals(this.totalPrice, invoiceLine.totalPrice) &&
        Objects.equals(this.quantity, invoiceLine.quantity) &&
        Objects.equals(this.vatNote, invoiceLine.vatNote) &&
        Objects.equals(this.checkSubscriptionDateOverlap, invoiceLine.checkSubscriptionDateOverlap) &&
        Objects.equals(this.fullyInvoiced, invoiceLine.fullyInvoiced) &&
        Objects.equals(this.subscriptionFromDate, invoiceLine.subscriptionFromDate) &&
        Objects.equals(this.subscriptionToDate, invoiceLine.subscriptionToDate) &&
        Objects.equals(this.additionalInfo, invoiceLine.additionalInfo) &&
        Objects.equals(this.releaseRemainingEncumbrance, invoiceLine.releaseRemainingEncumbrance) &&
        Objects.equals(this.reportingCode, invoiceLine.reportingCode) &&
        Objects.equals(this.secondaryReportingCode, invoiceLine.secondaryReportingCode) &&
        Objects.equals(this.tertiaryReportingCode, invoiceLine.tertiaryReportingCode) &&
        Objects.equals(this.note, invoiceLine.note) &&
        Objects.equals(this.invoiceLineVat, invoiceLine.invoiceLineVat) &&
        Objects.equals(this.fundDistribution, invoiceLine.fundDistribution);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, number, status, poLine, price, priceNote, totalPrice, quantity, vatNote, checkSubscriptionDateOverlap, fullyInvoiced, subscriptionFromDate, subscriptionToDate, additionalInfo, releaseRemainingEncumbrance, reportingCode, secondaryReportingCode, tertiaryReportingCode, note, invoiceLineVat, fundDistribution);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceLine2 {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    poLine: ").append(toIndentedString(poLine)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceNote: ").append(toIndentedString(priceNote)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    vatNote: ").append(toIndentedString(vatNote)).append("\n");
    sb.append("    checkSubscriptionDateOverlap: ").append(toIndentedString(checkSubscriptionDateOverlap)).append("\n");
    sb.append("    fullyInvoiced: ").append(toIndentedString(fullyInvoiced)).append("\n");
    sb.append("    subscriptionFromDate: ").append(toIndentedString(subscriptionFromDate)).append("\n");
    sb.append("    subscriptionToDate: ").append(toIndentedString(subscriptionToDate)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("    releaseRemainingEncumbrance: ").append(toIndentedString(releaseRemainingEncumbrance)).append("\n");
    sb.append("    reportingCode: ").append(toIndentedString(reportingCode)).append("\n");
    sb.append("    secondaryReportingCode: ").append(toIndentedString(secondaryReportingCode)).append("\n");
    sb.append("    tertiaryReportingCode: ").append(toIndentedString(tertiaryReportingCode)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    invoiceLineVat: ").append(toIndentedString(invoiceLineVat)).append("\n");
    sb.append("    fundDistribution: ").append(toIndentedString(fundDistribution)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

