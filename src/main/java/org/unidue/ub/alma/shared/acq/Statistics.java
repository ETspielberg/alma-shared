/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.unidue.ub.alma.shared.acq;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;

/**
 * Statistical details about the interface.
 */
@ApiModel(description = "Statistical details about the interface.")
@JsonPropertyOrder({
  Statistics.JSON_PROPERTY_USER_ID,
  Statistics.JSON_PROPERTY_USER_PASSWORD,
  Statistics.JSON_PROPERTY_USER_PASS_NOTE,
  Statistics.JSON_PROPERTY_AVAILABLE,
  Statistics.JSON_PROPERTY_DELIVERY_METHOD,
  Statistics.JSON_PROPERTY_FORMAT,
  Statistics.JSON_PROPERTY_FREQUENCY,
  Statistics.JSON_PROPERTY_ONLINE_LOCATION,
  Statistics.JSON_PROPERTY_DELIVERY_ADDRESS,
  Statistics.JSON_PROPERTY_LOCALLY_STORED,
  Statistics.JSON_PROPERTY_STATISTICS_NOTE
})

@XmlRootElement(name = "statistics")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "statistics")
public class Statistics implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  @XmlElement(name = "user_id")
  private String userId;

  public static final String JSON_PROPERTY_USER_PASSWORD = "user_password";
  @XmlElement(name = "user_password")
  private String userPassword;

  public static final String JSON_PROPERTY_USER_PASS_NOTE = "user_pass_note";
  @XmlElement(name = "user_pass_note")
  private String userPassNote;

  public static final String JSON_PROPERTY_AVAILABLE = "available";
  @XmlElement(name = "available")
  private Boolean available;

  public static final String JSON_PROPERTY_DELIVERY_METHOD = "delivery_method";
  @XmlElement(name = "delivery_method")
  private StatisticsDeliveryMethod deliveryMethod;

  public static final String JSON_PROPERTY_FORMAT = "format";
  @XmlElement(name = "format")
  private StatisticsFormat format;

  public static final String JSON_PROPERTY_FREQUENCY = "frequency";
  @XmlElement(name = "frequency")
  private StatisticsFrequency frequency;

  public static final String JSON_PROPERTY_ONLINE_LOCATION = "online_location";
  @XmlElement(name = "online_location")
  private String onlineLocation;

  public static final String JSON_PROPERTY_DELIVERY_ADDRESS = "delivery_address";
  @XmlElement(name = "delivery_address")
  private String deliveryAddress;

  public static final String JSON_PROPERTY_LOCALLY_STORED = "locally_stored";
  @XmlElement(name = "locally_stored")
  private String locallyStored;

  public static final String JSON_PROPERTY_STATISTICS_NOTE = "statistics_note";
  @XmlElement(name = "statistics_note")
  private String statisticsNote;


  public Statistics userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The user id for security purposes.
   * @return userId
  **/

  @ApiModelProperty(value = "The user id for security purposes.")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "user_id")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public Statistics userPassword(String userPassword) {
    
    this.userPassword = userPassword;
    return this;
  }

   /**
   * The user password for security purposes.
   * @return userPassword
  **/

  @ApiModelProperty(value = "The user password for security purposes.")
  @JsonProperty(JSON_PROPERTY_USER_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "user_password")

  public String getUserPassword() {
    return userPassword;
  }


  public void setUserPassword(String userPassword) {
    this.userPassword = userPassword;
  }


  public Statistics userPassNote(String userPassNote) {
    
    this.userPassNote = userPassNote;
    return this;
  }

   /**
   * The user password&#39;s related note.
   * @return userPassNote
  **/

  @ApiModelProperty(value = "The user password's related note.")
  @JsonProperty(JSON_PROPERTY_USER_PASS_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "user_pass_note")

  public String getUserPassNote() {
    return userPassNote;
  }


  public void setUserPassNote(String userPassNote) {
    this.userPassNote = userPassNote;
  }


  public Statistics available(Boolean available) {
    
    this.available = available;
    return this;
  }

   /**
   * Indication whether the usage statistics are available for the resource.
   * @return available
  **/

  @ApiModelProperty(example = "false", value = "Indication whether the usage statistics are available for the resource.")
  @JsonProperty(JSON_PROPERTY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "available")

  public Boolean getAvailable() {
    return available;
  }


  public void setAvailable(Boolean available) {
    this.available = available;
  }


  public Statistics deliveryMethod(StatisticsDeliveryMethod deliveryMethod) {
    
    this.deliveryMethod = deliveryMethod;
    return this;
  }

   /**
   * Get deliveryMethod
   * @return deliveryMethod
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELIVERY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "delivery_method")

  public StatisticsDeliveryMethod getDeliveryMethod() {
    return deliveryMethod;
  }


  public void setDeliveryMethod(StatisticsDeliveryMethod deliveryMethod) {
    this.deliveryMethod = deliveryMethod;
  }


  public Statistics format(StatisticsFormat format) {
    
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "format")

  public StatisticsFormat getFormat() {
    return format;
  }


  public void setFormat(StatisticsFormat format) {
    this.format = format;
  }


  public Statistics frequency(StatisticsFrequency frequency) {
    
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/

  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "frequency")

  public StatisticsFrequency getFrequency() {
    return frequency;
  }


  public void setFrequency(StatisticsFrequency frequency) {
    this.frequency = frequency;
  }


  public Statistics onlineLocation(String onlineLocation) {
    
    this.onlineLocation = onlineLocation;
    return this;
  }

   /**
   * The online location where statistics can be accessed, such as a URL or file path.
   * @return onlineLocation
  **/

  @ApiModelProperty(value = "The online location where statistics can be accessed, such as a URL or file path.")
  @JsonProperty(JSON_PROPERTY_ONLINE_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "online_location")

  public String getOnlineLocation() {
    return onlineLocation;
  }


  public void setOnlineLocation(String onlineLocation) {
    this.onlineLocation = onlineLocation;
  }


  public Statistics deliveryAddress(String deliveryAddress) {
    
    this.deliveryAddress = deliveryAddress;
    return this;
  }

   /**
   * The contact name within the library.
   * @return deliveryAddress
  **/

  @ApiModelProperty(value = "The contact name within the library.")
  @JsonProperty(JSON_PROPERTY_DELIVERY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "delivery_address")

  public String getDeliveryAddress() {
    return deliveryAddress;
  }


  public void setDeliveryAddress(String deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
  }


  public Statistics locallyStored(String locallyStored) {
    
    this.locallyStored = locallyStored;
    return this;
  }

   /**
   * Information about and/or links to locally stored data.
   * @return locallyStored
  **/

  @ApiModelProperty(value = "Information about and/or links to locally stored data.")
  @JsonProperty(JSON_PROPERTY_LOCALLY_STORED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "locally_stored")

  public String getLocallyStored() {
    return locallyStored;
  }


  public void setLocallyStored(String locallyStored) {
    this.locallyStored = locallyStored;
  }


  public Statistics statisticsNote(String statisticsNote) {
    
    this.statisticsNote = statisticsNote;
    return this;
  }

   /**
   * Information about usage-related statistics.
   * @return statisticsNote
  **/

  @ApiModelProperty(value = "Information about usage-related statistics.")
  @JsonProperty(JSON_PROPERTY_STATISTICS_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "statistics_note")

  public String getStatisticsNote() {
    return statisticsNote;
  }


  public void setStatisticsNote(String statisticsNote) {
    this.statisticsNote = statisticsNote;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Statistics statistics = (Statistics) o;
    return Objects.equals(this.userId, statistics.userId) &&
        Objects.equals(this.userPassword, statistics.userPassword) &&
        Objects.equals(this.userPassNote, statistics.userPassNote) &&
        Objects.equals(this.available, statistics.available) &&
        Objects.equals(this.deliveryMethod, statistics.deliveryMethod) &&
        Objects.equals(this.format, statistics.format) &&
        Objects.equals(this.frequency, statistics.frequency) &&
        Objects.equals(this.onlineLocation, statistics.onlineLocation) &&
        Objects.equals(this.deliveryAddress, statistics.deliveryAddress) &&
        Objects.equals(this.locallyStored, statistics.locallyStored) &&
        Objects.equals(this.statisticsNote, statistics.statisticsNote);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, userPassword, userPassNote, available, deliveryMethod, format, frequency, onlineLocation, deliveryAddress, locallyStored, statisticsNote);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Statistics2 {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userPassword: ").append(toIndentedString(userPassword)).append("\n");
    sb.append("    userPassNote: ").append(toIndentedString(userPassNote)).append("\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    deliveryMethod: ").append(toIndentedString(deliveryMethod)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    onlineLocation: ").append(toIndentedString(onlineLocation)).append("\n");
    sb.append("    deliveryAddress: ").append(toIndentedString(deliveryAddress)).append("\n");
    sb.append("    locallyStored: ").append(toIndentedString(locallyStored)).append("\n");
    sb.append("    statisticsNote: ").append(toIndentedString(statisticsNote)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

